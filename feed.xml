<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.5">Jekyll</generator><link href="http://coding4ever.net/feed.xml" rel="self" type="application/atom+xml" /><link href="http://coding4ever.net/" rel="alternate" type="text/html" /><updated>2020-05-29T12:38:32+07:00</updated><id>http://coding4ever.net/feed.xml</id><title type="html">» Coding4ever’s Blog «</title><subtitle>Coding4ever's Blog</subtitle><author><name>Kamarudin</name></author><entry><title type="html">ReportViewer untuk .NET Developer Bagian #1</title><link href="http://coding4ever.net/blog/2020/05/23/reportviewer-1/" rel="alternate" type="text/html" title="ReportViewer untuk .NET Developer Bagian #1" /><published>2020-05-23T12:49:22+07:00</published><updated>2020-05-23T12:49:22+07:00</updated><id>http://coding4ever.net/blog/2020/05/23/reportviewer-1</id><content type="html" xml:base="http://coding4ever.net/blog/2020/05/23/reportviewer-1/">&lt;blockquote&gt;
  &lt;p&gt;Tak kenal maka tak sayang, tak sayang maka tak cinta.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/logo/rv-logo.png&quot; alt=&quot;&quot; class=&quot;align-left&quot; /&gt;Mungkin inilah pepatah yang tepat sebagai pembuka postingan saya kali ini :grin:. Sudah banyak tool reporting yang saya gunakan untuk membuat laporan aplikasi mulai dari Data Report, Crystal Report, dan ActiveReport. Ketiga tool reporting ini saya gunakan ketika membuat aplikasi dengan menggunakan Visual Basic 6.&lt;/p&gt;

&lt;p&gt;Ketika pindah ke platform .NET saya pun tetap menggunakan tool reporting yang sama yaitu Crystal Report .NET atau ActiveReport .NET. Walaupun waktu itu saya sudah mengetahui adanya ReportViewer yang merupakan tool reporting bawaan .NET, tapi ya karena memang sudah nyaman menggunakan Crystal Report .NET atau ActiveReport .NET jadi saya memang belum punya alasan atau motivasi yang kuat untuk nyobain yang namanya ReportViewer. Alasan lainnya karena waktu itu tool ReportViewer ini masih saya pandang sebelah mata, jadi saya masih mengganggap tool ini sama seperti tool Data Reportnya Visual Basic 6 yang kurang powerful untuk membuat laporan yang kompleks :grin:. Terakhir karena masalah lisensi akhirnya saya lebih memilih untuk menggunakan Crystal Report .NET dari pada ActiveReport .NET.&lt;/p&gt;

&lt;p&gt;Nah masalah muncul ketika saya mulai mengembangkan project open source &lt;a href=&quot;https://github.com/rudi-krsoftware/open-retail&quot;&gt;OpenRetail&lt;/a&gt; (2017). Sebenarnya bukan karena masalah teknis sih, tapi karena &lt;a href=&quot;https://github.com/rudi-krsoftware/open-retail&quot;&gt;OpenRetail&lt;/a&gt; ini adalah project open source tentu akan menjadi &lt;strong&gt;mass production&lt;/strong&gt; (produksi massal) yang akan digunakan oleh banyak orang. Masalahnya adalah file runtime Crystal Report .NET itu punya ukuran yang lumayan besar, yang terdiri dari dua versi yaitu 32 bit (75 mb) dan 64 bit (83 mb). Jadi klo saya membuat paket instalasi untuk &lt;a href=&quot;https://github.com/rudi-krsoftware/open-retail&quot;&gt;OpenRetail&lt;/a&gt; berarti saya harus mengikutsertakan ke dua file runtime Crystal Report .NET tersebut. Anggap saja untuk hasil build/compile project &lt;a href=&quot;https://github.com/rudi-krsoftware/open-retail&quot;&gt;OpenRetail&lt;/a&gt; ini adalah 10 mb berarti klo ditambah runtime Crystal Report .NET maka file setup yang dihasilkan akan berukuran lebih kurang 168 mb :scream:, ini belum termasuk runtime NET Framework loh ya yang berukuran 40-60 mban. Jadi boro-boro ada user yang mau nyobain, download aja males :grin:.&lt;/p&gt;

&lt;p&gt;Singkat cerita setelah mendapat masukan dari salah satu teman yang menggunakan ReportViewer untuk tool reportingnya, saya pun memutuskan untuk menggunakan ReportViewer untuk keperluan pembuatan laporan di project &lt;a href=&quot;https://github.com/rudi-krsoftware/open-retail&quot;&gt;OpenRetail&lt;/a&gt;. Motivasi utamanya jelas karena file runtime ReportViewer cuma berukuran 7.5 mb :thumbsup:.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/36-runtime-cr-vs-rv.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jadi dengan menggunakan ReportViewer ditambah dengan file-file runtime lainnya, paket instalasi &lt;a href=&quot;https://github.com/rudi-krsoftware/open-retail&quot;&gt;OpenRetail&lt;/a&gt; yang dihasilnya hanya berukuran 22 mb. Lumayan ngiritkan dari 168 mb menjadi 22 mb :grin:.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/37-setup-openretail.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;apa-itu-reportviewer&quot;&gt;Apa itu ReportViewer?&lt;/h2&gt;

&lt;p&gt;ReportViewer adalah tool reporting gratis yang dikembangkan Microsoft untuk platform .NET, selain gratis tool ini juga secara built-in sudah terinstall ketika kita menginstall Visual Studio .NET.  Tapi sejak Visual Studio 2017, kita harus menginstall secara manual ReportViewer melalui menu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tools&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Extensions and Update&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Berikut adalah beberapa keuntungan menggunakan ReportViewer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Drag-and-drop.&lt;/li&gt;
  &lt;li&gt;Mendukung beberapa operasi standar seperti filtering, sorting grouping dan aggregation.&lt;/li&gt;
  &lt;li&gt;Mendukung beberapa cara menampilkan data seperti list, tabel, grafik dan matrik (crosstabs).&lt;/li&gt;
  &lt;li&gt;Mendukung conditional formatting atau embed expressions (bisa langsung coding direportnya).&lt;/li&gt;
  &lt;li&gt;Mendukung mode print langsung atau print preview.&lt;/li&gt;
  &lt;li&gt;Bisa dengan mudah mengatur jenis font, colors, border styles, background images dll.&lt;/li&gt;
  &lt;li&gt;Bisa di ekspor ke Excel, Word and PDF formats.&lt;/li&gt;
  &lt;li&gt;Selain bisa digunakan untuk WinForm dan WPF, ReportViewer juga bisa digunakan untuk project ASP.NET Web Forms atau ASP.NET MVC.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;cara-mengirim-data-ke-reportviewer&quot;&gt;Cara Mengirim Data ke ReportViewer&lt;/h2&gt;

&lt;p&gt;Secara umum ada 2 cara yang bisa digunakan untuk mengirim data ke report.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Pull model – kita mengeset koneksi ke database, mengirimkan perintah SQL, menentukan filter dan sisanya akan langsung ditangani oleh tool reporting. Cara yang pertama ini adalah cara umum yang biasanya digunakan untuk menampilkan data, dan rata-rata tutorial yang beredar juga menggunakan cara ini.&lt;/li&gt;
  &lt;li&gt;Push model – dengan cara yang kedua ini kita membuat tabel temporary dengan menggunakan objek DataSet, kemudian objek DataSet ini kita isi datanya dengan menggunakan objek collection, tapi sebelumnya objek collection ini kita olah dulu datanya dari aplikasi.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Tool reporting seperti &lt;a href=&quot;http://coding4ever.net/categories/crystal-reports-net/&quot;&gt;CrystalReport.NET&lt;/a&gt; mendukung 2 cara di atas, sedangkan &lt;a href=&quot;http://coding4ever.net/categories/reportviewer&quot;&gt;ReportViewer&lt;/a&gt; hanya mendukung cara yang kedua yaitu dengan menggunakan push model.&lt;/p&gt;

&lt;p&gt;Nah pada postingan kali ini kita akan menggunakan cara yang kedua yaitu Push Model dengan sumber datanya berupa object collection.&lt;/p&gt;

&lt;h2 id=&quot;pembuatan-project-reportviewer&quot;&gt;Pembuatan Project ReportViewer&lt;/h2&gt;

&lt;p&gt;Adapun tool yang digunakan dalam pembuatan project kali ini adalah:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.visualstudio.com/en-us/downloads/download-visual-studio-vs#d-community&quot;&gt;Visual Studio Community 2013&lt;/a&gt;, Anda bisa saja menggunakan Visual Studio .NET versi sebelumnya (2010, 2012) atau versi yang lebih tinggi&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;http://coding4ever.net/categories/nuget/&quot;&gt;NuGet&lt;/a&gt;, untuk memudahkan dalam menambahkan library pihak ketiga. Adapun library pihak ketiga yang digunakan dalam sample ini adalah &lt;a href=&quot;http://coding4ever.net/categories/dapper-net/&quot;&gt;Dapper .NET&lt;/a&gt; dan &lt;a href=&quot;https://www.nuget.org/packages/System.Data.SQLite.Core/&quot;&gt;System.Data.SQLite.Core&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;ReportViewer&lt;/li&gt;
  &lt;li&gt;Database &lt;a href=&quot;http://www.sqlite.org/&quot;&gt;SQLite&lt;/a&gt;, dengan menggunakan sample data database &lt;a href=&quot;https://github.com/k4m4r82/ReportViewer1/tree/master/database&quot;&gt;Northwind&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Tipe project WinForm&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Untuk contoh postingan kali ini, kita hanya menggunakan satu buah tabel dengan struktur seperti berikut :&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/01-struktur-tabel.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah semua tool yang dibutuhkan tersedia kita lanjutkan dengan pembuatan project :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Buat project baru dengan type WinForm&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/02-membuat-project.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Kemudian atur atau sesuaikan struktur projectnya seperti gambar berikut&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/03-struktur-project.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Berikut keterangan atau fungsi dari folder di atas:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;Controller&lt;/p&gt;

        &lt;p&gt;Selain berisi logic aplikasi, controller juga bertanggung jawab untuk mengatur komunikasi antara View dan Model. Jadi ketika ada &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;request&lt;/code&gt; dari View, Controller akan menentukan Model yang manakah yang berhak merespon request tersebut.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Context&lt;/p&gt;

        &lt;p&gt;Folder Context berisi class yang bertanggung jawab untuk berinteraksi secara langsung dengan database, seperti membuat koneksi, menjalankan perintah sql seperti insert, update, delete dan select atau mengeksekusi objek database seperti store procedure dan function&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Entity&lt;/p&gt;

        &lt;p&gt;Folder ini berisi class-class yang disebut dengan class model/entity. Class ini merupakan representasi dari tabel-tabel yang ada di dalam database. Tujuan dari pembuatan class ini adalah agar kita bisa melakukan mapping (pemetaan) baris/row yang merupakan hasil &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; dari sebuah tabel menjadi sekumpulan objek (object collection).&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;Repository&lt;/p&gt;

        &lt;p&gt;Folder repository berisi class-class yang digunakan untuk menjalankan operasi &lt;a href=&quot;https://en.wikipedia.org/wiki/Create,_read,_update_and_delete&quot;&gt;CRUD&lt;/a&gt;. Untuk informasi lebih lanjut tentang bagaimana cara membuat class repository, bisa Anda baca postingan saya yang berjudul &lt;a href=&quot;http://coding4ever.net/categories/repository-pattern/&quot;&gt;Repository Pattern&lt;/a&gt;.&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;View&lt;/p&gt;

        &lt;p&gt;Folder ini berisi form atau file report (ReportViewer)&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;class-modelentity&quot;&gt;Class Model/Entity&lt;/h2&gt;

&lt;p&gt;Untuk menerapkan konsep OOP (Object-oriented programming) dalam pemrograman database kita perlu membuat sebuah class yang disebut dengan istilah class Model atau Entity. Class ini merupakan representasi dari tabel-tabel yang ada di dalam database. Tujuan dari membuat class ini adalah agar kita bisa melakukan mapping (pemetaan) baris/row yang merupakan hasil &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; dari sebuah tabel menjadi sekumpulan objek (object collection).&lt;/p&gt;

&lt;p&gt;Pemetaan bisa dilakukan secara manual atau bisa juga secara otomatis dengan menggunakan tool-tool ORM dari pihak ketiga seperti &lt;a href=&quot;http://coding4ever.net/categories/dapper-net/&quot;&gt;Dapper .NET&lt;/a&gt; dan &lt;a href=&quot;http://coding4ever.net/categories/entity-framework/&quot;&gt;Entity Framework&lt;/a&gt;. Untuk contoh kali ini kita menggunakan &lt;a href=&quot;http://coding4ever.net/categories/dapper-net/&quot;&gt;Dapper .NET&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/04-ilustrasi-row-mapping.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah memahami apa itu class model dan bagaimana proses pemetaan record ke objek terjadi, langkah berikutnya adalah menambahkan class model/entity &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Product&lt;/code&gt; yang mempunyai struktur sama persis dengan rancangan tabel di awal.&lt;/p&gt;

&lt;p&gt;Berikut langkah-langkah untuk menambahkan class model/entity.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Klik kanan folder Entity -&amp;gt; Add -&amp;gt; Class…&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/05-add-class-entity1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/06-add-class-entity2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/07-add-class-entity3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Kemudian lengkapi kodenya seperti berikut:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/08-class-product.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Yang perlu diperhatikan pada saat membuat class model/entity, untuk penamaan property class sebaiknya disamakan dengan nama field yang ada di tabel. Jadi nanti akan mempermudah kita melakukan proses mapping (pemetaan) baris/row yang merupakan hasil &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; dari sebuah tabel menjadi sekumpulan objek (object collection)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;class-repository-dan-controller&quot;&gt;Class Repository dan Controller&lt;/h2&gt;

&lt;p&gt;Class &lt;a href=&quot;http://coding4ever.net/categories/repository-pattern/&quot;&gt;Repository&lt;/a&gt; adalah class yang bertugas untuk menangani operasi database yang dikenal dengan istilah operasi &lt;a href=&quot;https://en.wikipedia.org/wiki/Create,_read,_update_and_delete&quot;&gt;CRUD&lt;/a&gt; (Create, Read, Update dan Delete). Di dalam class inilah kita menuliskan perintah-perintah SQL seperti &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;INSERT&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UPDATE&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DELETE&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Sebagai contoh kita akan mengambil salah satu method yang ada di dalam class &lt;a href=&quot;https://github.com/k4m4r82/ReportViewer1/blob/master/src/ReportViewer1/Model/Repository/ProductRepository.cs&quot;&gt;ProductRepository&lt;/a&gt; yaitu method &lt;a href=&quot;https://github.com/k4m4r82/ReportViewer1/blob/d5a0186cec424ca9227cb87dc69c4e3c520a463a/src/ReportViewer1/Model/Repository/ProductRepository.cs#L45&quot;&gt;GetAll&lt;/a&gt;. Method ini akan mengeksekusi perintah SQL SELECT kemudian merubah/mengonversi hasilnya yang berupa objek resultset menjadi objek collection dengan bantuan library &lt;a href=&quot;http://coding4ever.net/categories/dapper-net/&quot;&gt;Dapper.NET&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/09-method-getall-repository.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GetAll&lt;/code&gt; yang ada di dalam class &lt;a href=&quot;https://github.com/k4m4r82/ReportViewer1/blob/master/src/ReportViewer1/Model/Repository/ProductRepository.cs&quot;&gt;ProductRepository&lt;/a&gt; ini tidak langsung di panggil dari Form (View), tapi kita buatkan terlebih dulu method di class &lt;a href=&quot;https://github.com/k4m4r82/ReportViewer1/blob/master/src/ReportViewer1/Controller/ProductController.cs&quot;&gt;Controllernya&lt;/a&gt; dengan nama yang sama yaitu &lt;a href=&quot;https://github.com/k4m4r82/ReportViewer1/blob/d5a0186cec424ca9227cb87dc69c4e3c520a463a/src/ReportViewer1/Controller/ProductController.cs#L14&quot;&gt;GetAll&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/10-method-getall-controller.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu baru kita panggil dari Form (View).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/11-panggil-method-getall.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Berikut adalah hasil dari pemanggilan kode di atas&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/12-form-product.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;dataset&quot;&gt;DataSet&lt;/h2&gt;

&lt;p&gt;Dengan model data push kita tidak langsung menghubungkan antara ReportViewer dengan database, jadi sebagai solusinya kita menggunakan DataSet yang berfungsi sebagai tabel temporary dan menjadi sumber data bagi ReportViewer. DataSet ini sendiri, nantinya akan kita isi datanya berupa objek collection yang kita dapatkan dari pemanggilan method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GetAll&lt;/code&gt; di atas.&lt;/p&gt;

&lt;p&gt;Ada beberapa cara untuk membuat DataSet yaitu:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Secara otomatis dengan memanfaatkan fasilitas Data Source, melalui menu Project -&amp;gt; Add New Data Source…&lt;/p&gt;

    &lt;p&gt;Dengan cara pertama ini kita bisa langsung memilih database berikut tabel atau view (query) yang datanya akan ditampilkan ke ReportViewer. Objek DataSet dan DataTablenya sudah otomatis dibuatkan.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Secara manual dengan menambahkan objek DataSet melalui klik kanan Project -&amp;gt; Add -&amp;gt; New Item… -&amp;gt; DataSet&lt;/p&gt;

    &lt;p&gt;Dengan cara yang kedua ini kita akan membuat objek DataSet dan DataTable secara manual.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Di postingan ini kita akan menggunakan cara kedua. Berikut langkah-langkahnya:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Klik kanan folder Report -&amp;gt; Add -&amp;gt; New Item…&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/13-add-dataset1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/14-add-dataset2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Langkah berikutnya kita menambahkan DataTable&lt;/p&gt;

    &lt;p&gt;Caranya dengan klik kanan pada Designer Dataset&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/15-add-datatable1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Kemudian ganti nama DataTablenya menjadi Product. Untuk semua field yang ada di DataTable Product harus disesuaikan dengan struktur tabel product atau sesuai dengan property yang ada di dalam class Product.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/16-add-datatable2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;mendesain-laporan-menggunakan-reportviewer&quot;&gt;Mendesain Laporan Menggunakan ReportViewer&lt;/h2&gt;

&lt;p&gt;ReportViewer adalah tool reporting gratis yang dikembangkan Microsoft untuk platform .NET, selain gratis tool ini juga secara built-in sudah terinstall ketika kita menginstall Visual Studio .NET.&lt;/p&gt;

&lt;p&gt;Berikut langkah-langkah mendesain laporan menggunakan ReportViewer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Klik kanan folder Report -&amp;gt; Add -&amp;gt; New Item…&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/17-add-report1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;setelah itu akan tampil Designer ReportViewer&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/18-add-report2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;kemudian atur property &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Copy to Output Directory&lt;/code&gt; menjadi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Copy if Newer&lt;/code&gt;.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/32-add-report3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Berikutnya aktifkan panel Report Data melalui menu View -&amp;gt; Report Data&lt;/p&gt;

    &lt;p&gt;selanjutnya klik kanan folder Datasets -&amp;gt; Add Dataset…&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/19-add-report3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;kemudian atur nilai properties datasetnya seperti gambar berikut:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/20-add-report4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/21-add-report5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Untuk menampilkan data dalam bentuk tabel kita bisa menggunakan komponen Table&lt;/p&gt;

    &lt;p&gt;Caranya klik kanan Designer ReportViewer -&amp;gt; Insert -&amp;gt; Table&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/22-inset-table.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;setelah itu atur ukuran tabelnya seperti berikut:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/23-design-table1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Kemudian drag field-field yang akan ditampilkan ke komponen tabel.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/24-design-table2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Jika kolom/field tabelnya masih kurang, untuk menambahkannya kita tinggal klik kanan kolom yang terakhir -&amp;gt; insert column -&amp;gt; right. Anda bisa mengulangi langkah-langkah ini sampai semua kolom/field yang dibutuhkan sudah lengkap.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/25-design-table3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Khusus untuk kolom No (No urut) karena nilainya tidak dibaca dari Dataset, kita bisa menggunakan built-in function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RowNumber&lt;/code&gt; untuk mendapatkan nomor baris. Jadi kita tinggal panggil fungsi ini melalui property &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Value&lt;/code&gt;.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/26-design-table4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Berikut hasil akhir design komponen tabel yang sudah dirapikan&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/27-design-table5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Untuk menambahkan judul laporan di atas (&lt;strong&gt;LAPORAN PRODUCT&lt;/strong&gt;), kita bisa menggunakan komponen &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TextBox&lt;/code&gt;.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/28-design-table6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;menambahkan-komponen-reportviewer&quot;&gt;Menambahkan Komponen ReportViewer&lt;/h2&gt;

&lt;p&gt;Setelah semua persiapan selesai, langkah berikutnya adalah menambahkan komponen ReportViewer yang berfungsi sebagai container untuk untuk menampilkan report. Tapi sebelumnya kita akan menambahkan terlebih dulu form baru untuk menempatkan komponen ReportViewer ini. Form baru ini kita beri nama &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FrmPreview&lt;/code&gt;, di form inilah kita akan menempatkan komponen ReportViewer.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/29-add-reportviewer1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Berikut langkah-langkah menambahkan komponen ReportViewer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Aktifkan FrmPreview kemudian tambahkan Komponen ReportViewer&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/30-add-reportviewer2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;kemudian tambahkan kode berikut di &lt;a href=&quot;https://github.com/k4m4r82/ReportViewer1/blob/master/src/ReportViewer1/View/FrmPreview.cs&quot;&gt;FrmPreview&lt;/a&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/31-add-reportviewer3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Setelah menambahkan kode di atas, kembali ke FrmProduct kemudian klik ganda button Preview&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/33-button-preview1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;kemudian lengkapi kodenya seperti berikut:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/34-button-preview2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Setelah melengkapi kode terakhir ini, kita tinggal jalankan aplikasinya kemudian klik button Preview. Berikut adalah contoh hasil laporan yang dibuat menggunakan ReportViewer :blush: :thumbsup:.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/02-report-viewer-1/35-reportviewer-preview.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Selamat &lt;a href=&quot;https://github.com/k4m4r82/ReportViewer1&quot;&gt;MENCOBA&lt;/a&gt; :blush:&lt;/p&gt;

&lt;p&gt;Referensi:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://www.gotreportviewer.com/&quot;&gt;Got ReportViewer&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sql/reporting-services/application-integration/using-the-winforms-reportviewer-control?view=sql-server-ver15&quot;&gt;Use the WinForms ReportViewer Control&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Kamarudin</name></author><category term="ReportViewer" /><category term="Push model" /><category term="Pull model" /><summary type="html">Tak kenal maka tak sayang, tak sayang maka tak cinta.</summary></entry><entry><title type="html">Proteksi Hasil Compile Aplikasi Anda Menggunakan ConfuserEx</title><link href="http://coding4ever.net/blog/2020/05/13/confuser-ex/" rel="alternate" type="text/html" title="Proteksi Hasil Compile Aplikasi Anda Menggunakan ConfuserEx" /><published>2020-05-13T22:19:44+07:00</published><updated>2020-05-13T22:19:44+07:00</updated><id>http://coding4ever.net/blog/2020/05/13/confuser-ex</id><content type="html" xml:base="http://coding4ever.net/blog/2020/05/13/confuser-ex/">&lt;h2 id=&quot;apa-itu-confuserex&quot;&gt;Apa itu ConfuserEx?&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/logo/confuser-ex-logo.png&quot; alt=&quot;&quot; class=&quot;align-left&quot; /&gt;&lt;a href=&quot;https://yck1509.github.io/ConfuserEx/&quot;&gt;ConfuserEx&lt;/a&gt; adalah tool open-source yang berfungsi untuk melindungi hasil compile aplikasi yang dikembangkan di atas platform .NET (C#, VB.NET, F# dan bahasa .NET lainnya). ConfuserEx dianggap sebagai salah satu tool &lt;a href=&quot;https://en.wikipedia.org/wiki/Obfuscation_(software)&quot;&gt;obfuscators&lt;/a&gt; terbaik yang tersedia gratis untuk platform .NET.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Hasil compile (assembly) yang sudah diproteksi menggunakan &lt;a href=&quot;https://yck1509.github.io/ConfuserEx/&quot;&gt;ConfuserEx&lt;/a&gt; akan menyulitkan orang lain untuk membaca kembali kodenya walaupun sudah di &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;decompile&lt;/code&gt; menggunakan tool decompiler sekelas &lt;a href=&quot;https://www.jetbrains.com/decompiler/&quot;&gt;JetBrains dotPeek&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;net-framework-yang-disupport&quot;&gt;.NET Framework yang disupport&lt;/h2&gt;

&lt;p&gt;Walaupun pengembangan &lt;a href=&quot;https://yck1509.github.io/ConfuserEx/&quot;&gt;ConfuserEx&lt;/a&gt; untuk saat ini sudah dihentikan. Untuk versi terakhirnya sudah mendukung .NET Framework sampai versi 4.6.x. Saya sendiri biasanya jika membuat aplikasi desktop tetap menggunakan .NET Framework versi 4.0 dengan pertimbangan agar aplikasinya tetap bisa di jalankan di Windows XP, sehingga tool &lt;a href=&quot;https://yck1509.github.io/ConfuserEx/&quot;&gt;ConfuserEx&lt;/a&gt; ini masih tetap bisa saya gunakan.&lt;/p&gt;

&lt;h2 id=&quot;jetbrains-dotpeek&quot;&gt;JetBrains dotPeek&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.jetbrains.com/decompiler/&quot;&gt;JetBrains dotPeek&lt;/a&gt; adalah tool decompiler gratis untuk aplikasi yang dikembangkan di atas platform .NET (C#, VB.NET, F# dan bahasa .NET lainnya).&lt;/p&gt;

&lt;p&gt;Di &lt;a href=&quot;http://coding4ever.net/blog/2020/05/13/confuser-ex/&quot;&gt;postingan&lt;/a&gt; ini saya akan menggunakan tool &lt;a href=&quot;https://www.jetbrains.com/decompiler/&quot;&gt;JetBrains dotPeek&lt;/a&gt; untuk keperluan uji coba decompiler hasil compile dari aplikasi .NET Framework.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/01-jetBrains-dotPeek.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;hasil-compile-aplikasi-net-framework&quot;&gt;Hasil Compile Aplikasi .NET Framework&lt;/h2&gt;

&lt;p&gt;Perlu diketahui bawah hasil compile dari aplikasi .NET masih dalam bentuk &lt;a href=&quot;https://en.wikipedia.org/wiki/Common_Intermediate_Language&quot;&gt;IL&lt;/a&gt; jadi belum dalam bentuk native code (bahasa mesin), sehingga dibutuhkan .NET Framework agar hasil compile ini bisa berjalan.&lt;/p&gt;

&lt;p&gt;Ada banyak tool yang bisa dengan &lt;em&gt;sempurna&lt;/em&gt; melakukan proses &lt;a href=&quot;https://en.wikipedia.org/wiki/Decompiler&quot;&gt;decompiler&lt;/a&gt; hasil compile aplikasi .NET Framework, salah satunya adalah tool &lt;a href=&quot;https://www.jetbrains.com/decompiler/&quot;&gt;JetBrains dotPeek&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Sebagai contoh sudah saya buatkan aplikasi yang akan kita coba decompile hasil compilenya menggunakan &lt;a href=&quot;https://www.jetbrains.com/decompiler/&quot;&gt;JetBrains dotPeek&lt;/a&gt;. Aplikasi ini bisa Anda download di &lt;a href=&quot;https://github.com/k4m4r82/NorthwindMVC&quot;&gt;sini&lt;/a&gt;. Ini adalah aplikasi CRUD sederhana yang sudah menerapkan konsep &lt;a href=&quot;http://coding4ever.net/categories/repository-pattern/&quot;&gt;Repository Pattern&lt;/a&gt; dan &lt;a href=&quot;https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&quot;&gt;MVC Pattern&lt;/a&gt;. Untuk database saya menggunakan MySQL.&lt;/p&gt;

&lt;p&gt;Yuk, kita liat dulu tampilan aplikasinya&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/02-form-list.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/03-form-entry.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Struktur project sudah menerapkan konsep &lt;a href=&quot;https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller&quot;&gt;MVC Pattern&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/04-struktur-project.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Model&lt;/code&gt; adalah layer yang bertugas untuk berkomunikasi dengan database secara langsung. Salah satu class yang ada di layer ini adalah class &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DbContext.cs&lt;/code&gt;. Class &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DbContext.cs&lt;/code&gt; ini bertanggung jawab untuk berinteraksi secara langsung dengan database, seperti membuat koneksi, menjalankan perintah sql seperti insert, update, delete dan select atau mengeksekusi objek database seperti store procedure dan function. Sehingga di class inilah biasanya kita menuliskan beberapa &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;informasi rahasia&lt;/code&gt; seperti &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;username&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;password&lt;/code&gt; yang digunakan untuk melakukan koneksi ke database seperti MySQL.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/05-class-dbcontext.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Berikutnya kita akan melihat kode yang ada di class Repository. Class Repository adalah class yang berisi kode-kode untuk menjalankan operasi &lt;a href=&quot;https://en.wikipedia.org/wiki/Create,_read,_update_and_delete&quot;&gt;CRUD&lt;/a&gt;. Sebagai contoh kita akan melihat isi dari class &lt;a href=&quot;https://github.com/k4m4r82/NorthwindMVC/blob/master/src/NorthwindApp/Model/Repository/ProductRepository.cs&quot;&gt;ProductRepository.cs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/06-class-repository1.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/07-class-repository2.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/08-class-repository3.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah melihat kode di atas, sekarang akan kita lakukan proses build/compile projectnya&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/09-proses-compile.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;kemudian akan kita lakukan proses decompile menggunakan tool decompiler &lt;a href=&quot;https://www.jetbrains.com/decompiler/&quot;&gt;JetBrains dotPeek&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/10-proses-decompile.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pertama kita cek dulu hasil decompile class &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DbContext.cs&lt;/code&gt;nya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/11-hasil-decompile-class-dbcontext.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mengerikan bukan hasil decompilenya, sama persis dengan kode aslinya :scream: :grin:&lt;/p&gt;

&lt;p&gt;Sekarang kita cek juga hasil decompile class ProductRepositorynya, dan hasilnya pun sama persis dengan kode aslinya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/12-hasil-decompile-class-product-repository.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nah sampai di sini sudah pahamkan, kenapa kita harus mengeluarkan usaha lebih untuk mengamankan hasil compile aplikasi kita.&lt;/p&gt;

&lt;h2 id=&quot;confuserex-in-action&quot;&gt;ConfuserEx In Action&lt;/h2&gt;

&lt;p&gt;Ok berikutnya kita akan menambahkan proteksi hasil compile aplikasi kita menggunakan tool &lt;a href=&quot;https://yck1509.github.io/ConfuserEx/&quot;&gt;ConfuserEx&lt;/a&gt;, jadi silahkan Anda download terlebih dulu aplikasinya di &lt;a href=&quot;https://github.com/yck1509/ConfuserEx/releases/download/v1.0.0/ConfuserEx_bin.zip&quot;&gt;sini&lt;/a&gt;. Kemudian Anda ekstrak, misal ke folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\ConfuserEx_bin&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Ada 2 cara untuk menggunakan &lt;a href=&quot;https://yck1509.github.io/ConfuserEx/&quot;&gt;ConfuserEx&lt;/a&gt;, yaitu:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Menggunakan GUI&lt;/li&gt;
  &lt;li&gt;Menggunakan CLI (Command-line Interface)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Di postingan ini saya akan menggunakan cara yang kedua yaitu menggunakan CLI (Command-line Interface). Berikut langkah-langkahnya:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Tambahkan sebuah file dengan ekstensi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.crproj&lt;/code&gt; (ConfuserEx project), untuk nama filenya kita samakan dengan nama projectnya, setelah itu simpan di folder aplikasi (satu folder dengan file project).&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/13-file-confuser-ex-project.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Kemudian lengkapi scriptnya seperti berikut:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/14-isi-file-confuser-ex-project.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Jika file yang akan diproteksi lebih dari satu, Anda bisa tambahkan setelah baris perintah &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;module path=... /&amp;gt;&lt;/code&gt;. Contoh:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/15-isi-file-confuser-ex-project.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Aktifkan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command prompt&lt;/code&gt;, kemudian Anda pindah ke folder project Anda.&lt;/p&gt;

    &lt;p&gt;Setelah itu ketik perintah: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\ConfuserEx_bin\Confuser.CLI.exe NorthwindApp.crproj&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/16-confuser-ex-cli.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;tunggu beberapa saat sampai proses ConfuserExnya selesai&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/17-confuser-ex-cli-output.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;bisa kita lihat pada gambar output di atas, untuk file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NorthwindApp.exe&lt;/code&gt; yang sudah diproteksi ada di folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Confused&lt;/code&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/18-confuser-ex-cli-output2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Nah sekarang kita coba lagi untuk melakukan proses decompile ulang terhadap file hasil compile yang sudah kita tambahkan proteksi ConfuserExnya menggunakan tool decompiler yang sama yaitu &lt;a href=&quot;https://www.jetbrains.com/decompiler/&quot;&gt;JetBrains dotPeek&lt;/a&gt;.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/19-proses-decompile2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;Dan ini adalah hasil decompile untuk class &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DbContext.cs&lt;/code&gt;. Sudah tidak terlihat lagi kan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;username&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;password&lt;/code&gt; untuk konek ke database :thumbsup:&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/20-proses-decompile2-class-dbcontext.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;begitu juga dengan hasil decompile untuk class ProductRepositorynya sudah terproteksi dengan baik.&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/21-proses-decompile2-class-product-repository.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;build-events&quot;&gt;Build Events&lt;/h2&gt;

&lt;p&gt;Sebenarnya pembahasan tentang ConfuserEx ini sudah selesai, tapi berhubungan perintah &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ConfuserEx CLI&lt;/code&gt; di atas masih dijalankan secara manual via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command prompt&lt;/code&gt; tentu akan merepotkan sekali jika harus dijalankan secara berulang setiap selesai melakukan proses build/compile. Trus apa solusinya agar perintah &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ConfuserEx CLI&lt;/code&gt; di atas bisa dijalankan secara otomatis? Salah satu solusinya adalah dengan memanfaatkan fasilitas &lt;a href=&quot;http://coding4ever.net/categories/build-events/&quot;&gt;Build Events&lt;/a&gt; yang sudah tersedia di Visual Studio .NET. Dengan fasilitas &lt;a href=&quot;http://coding4ever.net/categories/build-events/&quot;&gt;Build Events&lt;/a&gt; kita bisa menuliskan perintah &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command prompt (shell)&lt;/code&gt; termasuk menjalankan perintah &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ConfuserEx CLI&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Nah berikut script &lt;a href=&quot;http://coding4ever.net/categories/build-events/&quot;&gt;Build Events&lt;/a&gt; yang harus kita buat untuk menjalankan perintah &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ConfuserEx CLI&lt;/code&gt; di atas secara otomatis setiap kali kita melakukan proses build.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;rem &lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;lokasi folder deploy
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;DeployDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;SolutionDir&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\d&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;eploy&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;not exist %DeployDir% &lt;span class=&quot;nb&quot;&gt;mkdir&lt;/span&gt; %DeployDir%

rem copy hasil build ke folder deploy
copy /Y &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;TargetDir&lt;span class=&quot;si&quot;&gt;)$(&lt;/span&gt;TargetFileName&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.config&quot;&lt;/span&gt; %DeployDir%
copy /Y &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;TargetDir&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;*.dll&quot;&lt;/span&gt; %DeployDir%

rem jalankan ConfuserEx CLI
&lt;span class=&quot;nb&quot;&gt;set &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ConfuserExDir&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;onfuserEx_bin&quot;&lt;/span&gt;
%ConfuserExDir%&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;onfuser.CLI.exe &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;ProjectDir&lt;span class=&quot;si&quot;&gt;)$(&lt;/span&gt;ProjectName&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.crproj&quot;&lt;/span&gt;

rem hapus file build yang tidak diperlukan
del /s /q %DeployDir%&lt;span class=&quot;se&quot;&gt;\*&lt;/span&gt;.vshost.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
del /s /q %DeployDir%&lt;span class=&quot;se&quot;&gt;\*&lt;/span&gt;.xml
del /s /q %DeployDir%&lt;span class=&quot;se&quot;&gt;\*&lt;/span&gt;.pdb&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Untuk mengaktifkan &lt;a href=&quot;http://coding4ever.net/categories/build-events/&quot;&gt;Build Events&lt;/a&gt;, klik kanan nama project -&amp;gt; Properties -&amp;gt; tab &lt;a href=&quot;http://coding4ever.net/categories/build-events/&quot;&gt;Build Events&lt;/a&gt;. Kemudian copas script di atas di bagian &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Post-build Event Command Line&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/22-script-build-event.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu lakukan proses build, dan secara otomatis perintah ConfuserEx CLI akan dijalankan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/2020/01-confuser-ex/23-run-build-event.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Selamat mencoba :blush:&lt;/p&gt;

&lt;p&gt;Referensi:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://yck1509.github.io/ConfuserEx/&quot;&gt;ConfuserEx project&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/yck1509/ConfuserEx/wiki/Documentation&quot;&gt;ConfuserEx wiki&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Kamarudin</name></author><category term="Visual Studio .NET" /><category term="Build Events" /><category term="obfuscators" /><category term="compile" /><category term="compiler" /><category term="decompiler" /><summary type="html">Apa itu ConfuserEx?</summary></entry><entry><title type="html">Menyimpan konfigurasi aplikasi secara terpusat menggunakan Consul Key-Value Store Bagian #2</title><link href="http://coding4ever.net/blog/2019/08/31/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-2/" rel="alternate" type="text/html" title="Menyimpan konfigurasi aplikasi secara terpusat menggunakan Consul Key-Value Store Bagian #2" /><published>2019-08-31T09:26:47+07:00</published><updated>2019-08-31T09:26:47+07:00</updated><id>http://coding4ever.net/blog/2019/08/31/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-2</id><content type="html" xml:base="http://coding4ever.net/blog/2019/08/31/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-2/">&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/logo/consul-logo.png&quot; alt=&quot;&quot; class=&quot;align-left&quot; /&gt;Oke, hari ini saya ingin melanjutkan pembahasan &lt;a href=&quot;http://coding4ever.net/blog/2019/08/02/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-1/&quot;&gt;postingan&lt;/a&gt; saya sebelumnya tentang penyimpanan konfigurasi aplikasi secara terpusat menggunakan &lt;a href=&quot;https://www.consul.io/&quot;&gt;consul&lt;/a&gt;. Jika pada &lt;a href=&quot;http://coding4ever.net/blog/2019/08/02/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-1/&quot;&gt;postingan&lt;/a&gt; sebelumnya fokus pembahasan pada instalasi kemudian dilanjutkan dengan demo cara mengakses data yang tersimpan pada &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key-value store&lt;/code&gt; menggunakan salah satu tool REST Client favorit saya yaitu &lt;a href=&quot;https://www.getpostman.com/downloads/&quot;&gt;Postman&lt;/a&gt;, maka fokus pembahasan kali ini adalah bagaimana cara mengakses data &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key-value store&lt;/code&gt; yang berbasis &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;REST API&lt;/code&gt; menggunakan bahasa pemrograman Visual Basic 6 dan C# (.NET).&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h3 id=&quot;mengakses-data-key-value-store&quot;&gt;Mengakses Data Key-Value Store&lt;/h3&gt;

&lt;p&gt;Sebagai review untuk data yang tersimpan di &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;key-value store&lt;/code&gt; bisa diakses via RESTful API (Web API) menggunakan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP METHOD GET&lt;/code&gt;. Adapun endpoint yang digunakan yaitu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/v1/kv/NAMA_KEY&lt;/code&gt;. Contoh&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190829-01.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Informasi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;endpoint&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP METHOD&lt;/code&gt; ini penting untuk dicatat karena berhubungan dengan kode program yang akan kita tulis di pembahasan berikutnya.&lt;/p&gt;

&lt;h3 id=&quot;mengakses-data-key-value-store-dari-visual-basic-6&quot;&gt;Mengakses Data Key-Value Store Dari Visual Basic 6&lt;/h3&gt;

&lt;p&gt;Sebagai contoh kasus kita akan membuat form login, di mana form login ini selain membutuhkan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;password&lt;/code&gt; juga membutuhkan informasi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;server&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;database&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;port&lt;/code&gt;. Khusus untuk informasi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;server&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;database&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;port&lt;/code&gt; secara otomatis akan membaca data yang tersimpan di dalam &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Value Store&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Untuk tampilannya kita buat yang sederhana aja ya :grin:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190829-02.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190829-03.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Karena data yang diakses berupa RESTful API (dokumen web), di Visual Basic 6 kita menggunakan library &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Microsoft XML v6.0&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190829-04.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu kita buat sebuah method dengan nama &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GetRequest&lt;/code&gt; untuk mengakses RESTful API dengan menggunakan library &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Microsoft XML v6.0&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190829-05.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kemudian tambahkan lagi sebuah method dengan nama &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LoadAppConfig&lt;/code&gt;, di dalam method ini kita memanggil method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GetRequest&lt;/code&gt; dan menampilkan hasilnya ke console. Agar method ini bisa dipangil secara otomatis, kita panggil method ini di event form load.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190829-06.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jika berhasil, hasilnya seperti berikut:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190829-07.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nah dari gambar di atas, kita lihat bahwa hasil pemanggilan endpoint &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Value Store&lt;/code&gt; ini mengembalikan data string dengan format &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON&lt;/a&gt;. Secara built-in VB6 tidak menyediakan library untuk mengolah data dengan format &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON&lt;/a&gt;, tapi untungnya di luar sana sudah ada yang berbaik hati membuatkan &lt;a href=&quot;http://www.ediy.co.nz/vbjson-json-parser-library-in-vb6-xidc55680.html&quot;&gt;librarynya&lt;/a&gt;, sehingga mempermudah kita untuk mengolah data dengan format &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON&lt;/a&gt; menggunakan Visual Basic 6.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190829-08.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah menambahkan library &lt;a href=&quot;http://www.ediy.co.nz/vbjson-json-parser-library-in-vb6-xidc55680.html&quot;&gt;VB-JSON&lt;/a&gt; sekarang kita bisa langsung mengolah data &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON&lt;/a&gt;nya sebagai sebuah objek dan kemudian langsung menampilkan hasilnya ke dalam textbox &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;server&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;database&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;port&lt;/code&gt;. Berikut adalah hasil revisinya method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LoadAppConfig&lt;/code&gt;nya:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190829-09.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ok sampai di sini, kita bisa langsung menjalankan aplikasi untuk melihat hasilnya. Setelah form loginnya tampil aktifkan tab Connection, di mana informasi server, database dan port sudah otomatis terisi sesuai dengan informasi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Value Store&lt;/code&gt; yang tersimpan di server consul.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190829-10.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sudah tampil bukan?&lt;/p&gt;

&lt;p&gt;Sekarang kita coba edit informasi db-confignya, melalui menu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key/Value&lt;/code&gt;, kemudian jalankan sekali lagi aplikasinya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190829-11.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nah secara otomatis perubahan data yang tersimpan di &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Value Store&lt;/code&gt; juga akan terbaca oleh aplikasi.&lt;/p&gt;

&lt;h3 id=&quot;mengakses-data-key-value-store-dari-c-net&quot;&gt;Mengakses Data Key-Value Store Dari C# (.NET)&lt;/h3&gt;

&lt;p&gt;Untuk contoh berikutnya kita akan mengakses data &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Value Store&lt;/code&gt; menggunakan bahasa pemrograman C# (.NET). Di C# saya biasanya menggunakan library &lt;a href=&quot;https://www.nuget.org/packages/RestSharp/&quot;&gt;RestSharp&lt;/a&gt; untuk mengakses web api, selain itu kita juga membutuhkan library &lt;a href=&quot;https://www.nuget.org/packages/Newtonsoft.Json&quot;&gt;Newtonsoft.Json&lt;/a&gt;, kenapa? Karena hasil dari pemanggilan web apinya berupa string dengan format json. Jadi kita membutuhkan library ini untuk mengkonversi string json ke objek class. Untuk menginstall kedua library ini Anda bisa menggunakan  &lt;a href=&quot;http://coding4ever.net/categories/nuget/&quot;&gt;Nuget Package Manager Console&lt;/a&gt; dengan perintah berikut:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;Install-Package RestSharp &lt;span class=&quot;nt&quot;&gt;-Version&lt;/span&gt; 105.2.3
Install-Package Newtonsoft.Json &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; 9.0.1&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Setelah menginstall ke dua library di atas, langkah berikutnya adalah kita akan menambahkan class model terlebih dulu. Class model ini saya beri nama &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppConfig&lt;/code&gt; agar nanti hasil dari pemanggilan webnya bisa langsung kita konversi ke objek class model ini dengan bantuan library &lt;a href=&quot;https://www.nuget.org/packages/Newtonsoft.Json&quot;&gt;Newtonsoft.Json&lt;/a&gt;. Berikut contoh class model yang dibuat.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190829-15.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190829-12.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pada gambar di atas, kita bisa lihat untuk struktur class modelnya dibuat menyesuaikan struktur json yang ada di &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Value Store&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Setelah itu tambahkan kode berikut untuk pemanggilan web apinya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190829-13.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kemudian kita bisa langsung menjalankan aplikasi untuk melihat hasilnya. Setelah form loginnya tampil aktifkan tab Connection, di mana informasi server, database dan port sudah otomatis terisi sesuai dengan informasi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Value Store&lt;/code&gt; yang tersimpan di server consul.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190829-14.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;kesimpulan&quot;&gt;Kesimpulan&lt;/h3&gt;

&lt;p&gt;Dengan menggunakan &lt;a href=&quot;https://www.consul.io/&quot;&gt;consul&lt;/a&gt; sebagai pusat penyimpanan konfigurasi aplikasi, akan mempermudah kita ketika terjadi perubahan konfigurasi aplikasi yang selama ini biasanya disimpan secara lokalan. Jadi kita tidak perlu merubah konfigurasi lokal aplikasi satu per satu di pc/lapton klien.&lt;/p&gt;

&lt;p&gt;Selamat mencoba :blush:&lt;/p&gt;</content><author><name>Kamarudin</name></author><category term="consul" /><category term="key-value" /><summary type="html">Oke, hari ini saya ingin melanjutkan pembahasan postingan saya sebelumnya tentang penyimpanan konfigurasi aplikasi secara terpusat menggunakan consul. Jika pada postingan sebelumnya fokus pembahasan pada instalasi kemudian dilanjutkan dengan demo cara mengakses data yang tersimpan pada key-value store menggunakan salah satu tool REST Client favorit saya yaitu Postman, maka fokus pembahasan kali ini adalah bagaimana cara mengakses data key-value store yang berbasis REST API menggunakan bahasa pemrograman Visual Basic 6 dan C# (.NET).</summary></entry><entry><title type="html">Solusi Mengakses Database Lokal (IP Private) Secara Online</title><link href="http://coding4ever.net/blog/2019/08/25/solusi-mengakses-database-lokal-ip-private-secara-online/" rel="alternate" type="text/html" title="Solusi Mengakses Database Lokal (IP Private) Secara Online" /><published>2019-08-25T16:00:03+07:00</published><updated>2019-08-25T16:00:03+07:00</updated><id>http://coding4ever.net/blog/2019/08/25/solusi-mengakses-database-lokal-ip-private-secara-online</id><content type="html" xml:base="http://coding4ever.net/blog/2019/08/25/solusi-mengakses-database-lokal-ip-private-secara-online/">&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/logo/websocket-logo.png&quot; alt=&quot;&quot; class=&quot;align-left&quot; /&gt;Salah satu tantangan bagi software developer untuk aplikasi bisnis berbasis desktop adalah ketika klien meminta untuk mengonlinekan database mereka. Karena memang rata-rata aplikasi desktop hanya digunakan untuk keperluan internal kantor/perusahaan.&lt;/p&gt;

&lt;p&gt;Biasanya ada beberapa solusi yang bisa kita tawarkan, ketika klien menginginkan database lokal mereka (ip private) bisa diakses secara online, seperti:&lt;/p&gt;

&lt;!-- more --&gt;

&lt;ul&gt;
  &lt;li&gt;Upgrade paket internet, jika klien kita berlangganan paket internet indihome bisa upgrade ke paket enterprise, tapi klo berat dibiaya bisa langganan IP Dynamic Indihome. Apakah masalah sudah selesai sampai di sini? Engga juga sih, kita masih harus menyeting portforwarding dan setting-lainnya lainya.&lt;/li&gt;
  &lt;li&gt;Menggunakan software VPN seperti &lt;a href=&quot;http://coding4ever.net/blog/2010/02/02/belajar-winsock-bagian-4-e28093-membuat-jaringan-vpn-sendiri/&quot;&gt;Hamachi&lt;/a&gt;, &lt;a href=&quot;https://www.zerotier.com/&quot;&gt;ZeroTier&lt;/a&gt;, atau &lt;a href=&quot;http://coding4ever.net/blog/2018/07/05/membuat-jaringan-vpn-menggunakan-softether-vpn-bagian-number-1/&quot;&gt;SoftEther VPN&lt;/a&gt;, tapi cara kedua ini akan mengurangi koneksi internet kita karena harus menyediakan jalur untuk koneksi VPNnya.&lt;/li&gt;
  &lt;li&gt;Menyewa layanan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shared Hosting&lt;/code&gt;, biaya langganannya juga lumayan murah, sekitar 100 ribuan pertahun. Dengan menyewa layanan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shared Hosting&lt;/code&gt; berarti kita harus membuat copyan database lokal untuk ditempatkan di &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shared Hosting&lt;/code&gt; agar bisa diakses secara online. Tantangannya adalah kita harus membuat aplikasi kecil yang bertugas menyinkronkan database lokal dan database yang ada di &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shared Hosting&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Membuat sendiri service yang berfungsi sebagai gateway yang bertugas menjembatani antara aplikasi klien dan database. Untuk cara yang terakhir ini kita membutuhkan sebuah server dengan ip public, contoh disini saya menyewa VPS dengan OS Linux (Ubuntu) di &lt;a href=&quot;https://www.digitalocean.com/&quot;&gt;digitalocean&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nah dipostingan ini kita akan membahas solusi terakhir. Idenya adalah kita ingin memberikan kemudahan kepada klien/customer dalam menggunakan aplikasi yang kita buat, jadi dengan konfigurasi yang sangat minim sekali, aplikasi client bisa langsung konek ke database. Keuntungan lainnya adalah dengan cara ini bisa dijadikan lahan bisnis untuk layanan sewa server, jadi klo klien ingin databasenya bisa diakses secara online ya harus sewa server dulu hehehe :grin:&lt;/p&gt;

&lt;p&gt;Karena postingan kali ini adalah hasil dari riset komersil yang saya kerjakan, jadi saya hanya akan membahas tentang &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;arsitektur&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;teknologi&lt;/code&gt; yang digunakan, tanpa kode ya… :grin:.&lt;/p&gt;

&lt;h3 id=&quot;arsitektur-aplikasi&quot;&gt;Arsitektur Aplikasi&lt;/h3&gt;

&lt;p&gt;Untuk arsitektur aplikasi yang digunakan seperti gambar berikut:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/2019082507.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Keterangan gambar:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Database yang diinstall di jaringan lokal, bisa database PostgreSql, FirebirdSql, SQL Server, MySQL, dan lain-lain. Tergantung database yang Anda gunakan.&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;WebSocketService – Aplikasi ini bisa diinstall secara terpisah atau satu mesin dengan database. Jadi aplikasi inilah yang terkoneksi langsung dengan database via jaringan lokal (LAN). Aplikasi ini dibuat menggunakan WinForm atau bisa juga berbasis windows service, intinya disesuaikan dengan kebutuhan Anda. Karena aplikasi ini menggunakan library &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/signalr/introduction?view=aspnetcore-2.2&quot;&gt;SignalR Core&lt;/a&gt; untuk berkomunikasi dengan aplikasi WebSocketGateway yang ada di VPS, maka untuk menjalankan aplikasi ini minimal windows yang dibutuhkan adalah Windows 7 SP1 (.NET Framework 4.6.x).
  &lt;img src=&quot;center https://coding4ever.files.wordpress.com/2019/08/2019082502.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;WebSocketGateway – Aplikasi ini berfungsi sebagai WebSocket server, dibuat menggunakan ASP.NET Core. Selain bertugas untuk menghandle komunikasi via websocket (signalR), juga bertugas untuk menghandle komunikasi via http (web api). WebSocketGateway ini nantinya akan di deploy ke VPS dengan bantuan &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt;.
  &lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/2019082503.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Aplikasi klien, bisa berupa desktop, web dan mobile. Aplikasi ini akan berkomunikasi dengan WebSocketGateway via web api (web service)
&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/2019082504.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;url&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;teknologi-yang-digunakan&quot;&gt;Teknologi yang digunakan:&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;ASP.NET Core, teknologi ini saya gunakan karena VPS yang disewa berbasis linux (Ubuntu)&lt;/li&gt;
  &lt;li&gt;Websocket menggunakan &lt;a href=&quot;http://coding4ever.net/categories/signalr/&quot;&gt;SignalR&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; digunakan untuk mempermudah proses deploy aplikasi ASP.NET Corenya&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;apa-itu-aspnet-core&quot;&gt;Apa itu ASP.NET Core?&lt;/h3&gt;

&lt;p&gt;ASP.NET Core adalah sebuah framework yang bisa digunakan untuk membangun sebuah layanan Web API berbasis teknologi .NET. Framework ini adalah versi open-source dari ASP.NET, yang bisa berjalan di berbagai platform seperti macOS, Linux, dan Windows.&lt;/p&gt;

&lt;p&gt;Untuk informasi lebih lanjut mengenai ASP.NET Core bisa Anda baca di &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/core/?view=aspnetcore-2.2&quot;&gt;sini&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;apa-itu-signalr&quot;&gt;Apa itu SignalR?&lt;/h3&gt;

&lt;p&gt;SignalR adalah library yang memudahkan kita untuk menambahkan fungsi komunikasi real-time pada aplikasi yang kita kembangkan. Fungsi real-time di sini adalah kemampuan server melakukan pengiriman (push) konten atau data kepada client yang sudah terkoneksi ke server, sehingga server tidak perlu menunggu client untuk melakukan permintaan (request) data terbaru.&lt;/p&gt;

&lt;p&gt;SignalR selain digunakan untuk pengembangan aplikasi web, juga bisa digunakan untuk platform lainnya seperti desktop (console dan windows form) ataupun mobile (windows phone, android dan iOS).&lt;/p&gt;

&lt;p&gt;SignalR menyediakan API yang memungkinkan server memanggil fungsi/method yang dimiliki oleh client atau pun sebaliknya. Proses memanggil method secara remote ini dikenal dengan istilah remote procedure call (RPC).&lt;/p&gt;

&lt;p&gt;Komunikasi antara client dan server SignalR dibangun di atas koneksi &lt;a href=&quot;https://en.wikipedia.org/wiki/WebSocket&quot;&gt;WebSocket&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Beberapa waktu lalu saya pernah menulis implementasi SignalR untuk aplikasi berbasis windows yang bisa Anda baca di&lt;a href=&quot;http://coding4ever.net/categories/signalr/&quot;&gt;sini&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;apa-itu-docker&quot;&gt;Apa itu Docker?&lt;/h3&gt;

&lt;p&gt;Docker adalah teknologi container yang memudahkan kita untuk melakukan proses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deployment&lt;/code&gt; aplikasi ke berbagai platform (macOS, Linux, dan Windows). Untuk informasi lebih lanjut tentang Docker, bisa Anda baca di&lt;a href=&quot;https://www.docker.com/&quot;&gt;sini&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;demo-aplikasi&quot;&gt;Demo Aplikasi&lt;/h3&gt;

&lt;p&gt;Cara menghubungan aplikasi klien (desktop atau mobile) dengan WebSocketService sangat mudah, cukup menginputkan app id yang ditampilkan aplikasi WebSocketService pada tab Pengaturan. Setelah itu aplikasi klien Anda langsung terhubung ke database lokal.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/2019082506.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jika Anda juga penasaran dengan cara kerja aplikasi ini, dan ingin mencoba langsung, bisa Anda download demonya di &lt;a href=&quot;https://github.com/k4m4r82/demo-websocket-signalr&quot;&gt;sini&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Selamat mencoba :blush:&lt;/p&gt;</content><author><name>Kamarudin</name></author><category term="database lokal" /><category term="online" /><category term="websocket" /><category term="signalr" /><summary type="html">Salah satu tantangan bagi software developer untuk aplikasi bisnis berbasis desktop adalah ketika klien meminta untuk mengonlinekan database mereka. Karena memang rata-rata aplikasi desktop hanya digunakan untuk keperluan internal kantor/perusahaan.</summary></entry><entry><title type="html">Menyimpan konfigurasi aplikasi secara terpusat menggunakan Consul Key-Value Store Bagian #1</title><link href="http://coding4ever.net/blog/2019/08/02/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-1/" rel="alternate" type="text/html" title="Menyimpan konfigurasi aplikasi secara terpusat menggunakan Consul Key-Value Store Bagian #1" /><published>2019-08-02T15:13:39+07:00</published><updated>2019-08-02T15:13:39+07:00</updated><id>http://coding4ever.net/blog/2019/08/02/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-1</id><content type="html" xml:base="http://coding4ever.net/blog/2019/08/02/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-1/">&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/logo/consul-logo.png&quot; alt=&quot;&quot; class=&quot;align-left&quot; /&gt;Cara apa yang biasa Anda gunakan untuk menyimpan konfigurasi aplikasi? Biasanya ada beberapa pilihan seperti menyimpan dalam format text (&lt;a href=&quot;https://en.wikipedia.org/wiki/INI_file&quot;&gt;INI&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/XML&quot;&gt;XML&lt;/a&gt;, &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON&lt;/a&gt;), database atau langsung di hardcode di dalam kode program. Nah cara terakhir adalah yang paling ekstrim, jika terjadi perubahan konfigurasi aplikasi berarti kita harus merubah kode program dan melakukan kompilasi ulang :grin:.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;Konfigurasi lokalan ini memang sedikit merepotkan bagai programmer desktop, karana aplikasinya biasanya diinstall dibeberapa tempat sesuai dengan jumlah klien yang ada.&lt;/p&gt;

&lt;p&gt;Konfigurasi apa saja sih yang biasanya diperlukan oleh sebuah aplikasi? Ini juga tergantung kebutuhan, biasanya yang paling umum itu ya konfigurasi yang berhubungan dengan database seperti, &lt;em&gt;ip server&lt;/em&gt;, &lt;em&gt;nama database&lt;/em&gt; dan &lt;em&gt;port&lt;/em&gt; yang digunakan. Contoh:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/acd0b3a14f3830fff0c603909ef4a097.js&quot;&gt; &lt;/script&gt;

&lt;script src=&quot;https://gist.github.com/817ed3721c9d6a62e2a17b1e58f51129.js&quot;&gt; &lt;/script&gt;

&lt;script src=&quot;https://gist.github.com/872fa7d5e9775078e13c922c9e301cf4.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Pada contoh di atas konfigurasi aplikasi disimpan dengan berbagai format seperti &lt;a href=&quot;https://en.wikipedia.org/wiki/INI_file&quot;&gt;INI&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/XML&quot;&gt;XML&lt;/a&gt; dan &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Untuk aplikasi yang dibuat menggunakan VB6 biasanya akan menyimpan konfigurasi dengan format &lt;a href=&quot;https://en.wikipedia.org/wiki/INI_file&quot;&gt;INI&lt;/a&gt;, sedangkan yang menggunakan .NET lebih senang menggunakan format &lt;a href=&quot;https://en.wikipedia.org/wiki/XML&quot;&gt;XML&lt;/a&gt; atau &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Jadi apapun pilihan format konfigurasi aplikasi yang Anda gunakan, ketika ada perubahan konfigurasi berarti kita harus merubah satu per satu konfigurasi lokal dari aplikasi kita yang sudah terinstall di pc/laptop klien, baik dilakukan secara langsung (datang ke lokasi) atau dengan bantuan tool remote seperti Radmin.  Anda bayangkan saja klo pengguna aplikasi kita sudah ratusan bahkan ribuan, tentu akan menjadi pekerjaan yang merepotkan alias buang-buang waktu :grin:&lt;/p&gt;

&lt;h3 id=&quot;apa-itu-consul&quot;&gt;Apa itu Consul?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://www.consul.io/&quot;&gt;Consul&lt;/a&gt; adalah tool yang digunakan untuk keperluan discovery dan konfigurasi service. Tool ini mempunyai beberapa fitur utama yaitu:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Service Discovery&lt;/li&gt;
  &lt;li&gt;Health Checking&lt;/li&gt;
  &lt;li&gt;Key/Value Store&lt;/li&gt;
  &lt;li&gt;Multi Datacenter&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Saya sendiri mencoba tool ini ketika mempelajari arsitektur &lt;a href=&quot;https://microservices.io/&quot;&gt;microservices&lt;/a&gt; untuk keperluan monitoring service. Nah salah satu fitur tool ini yaitu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key/Value Store&lt;/code&gt; yang bisa kita gunakan untuk keperluan menyimpan konfigurasi aplikasi secara terpusat.&lt;/p&gt;

&lt;h3 id=&quot;cara-menginstall-consul&quot;&gt;Cara Menginstall Consul&lt;/h3&gt;

&lt;p&gt;Cara installnya gampang, Anda tinggal &lt;a href=&quot;https://www.consul.io/downloads.html&quot;&gt;download&lt;/a&gt; consul sesuai dengan versi OS yang Anda gunakan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190802-01.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Contoh di sini saya mendownload consul versi Windows dan menyimpannya di folder c:\consul.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190802-02.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu kita bisa langsung menjalankan consul dengan mode development.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190802-03.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah jalan, kita bisa langsung mengakses web administrasi consul di alamat localhost:8500&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190802-04.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Menjalankan consul dengan mode development ini ada sedikit kekurangan yaitu perubahan data yang kita lakukan misal menambahkan data di menu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key/Value&lt;/code&gt; itu tidak tersimpan secara permanen, jadi kita akan menjalankan consul agent dengan mode production. Caranya adalah dengan menambahkan file konfigurasi, misal kita simpan di folder c:\consul\config dengan nama &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;consul.json&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190802-05.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kemudian untuk isinya seperti gambar berikut:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190802-06-1.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Untuk element &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bind_addr&lt;/code&gt; diisi dengan ip pc/server dimana consul dijalankan. Dan untuk informasi lebih lanjut tentang bagaimana cara mengkonfigurasi consul, bisa anda cek di link &lt;a href=&quot;https://www.consul.io/docs/agent/options.html&quot;&gt;ini&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Setelah itu kita jalankan kembali consul dengan mode production.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190802-07.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;consul-key-value-store&quot;&gt;Consul Key-Value Store&lt;/h3&gt;

&lt;p&gt;Seperti yang sudah saya jelaskan di atas, salah satu fitur menarik yang dimiliki oleh consul yaitu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Value Store&lt;/code&gt;. Dengan fitur ini kita bisa menyimpan konfigurasi aplikasi secara terpusat di pc/server yang sudah terinstall consul. Jadi konfigurasi aplikasi kita yang awalnya tersimpan di lokalan, apakah itu menggunakan format &lt;a href=&quot;https://en.wikipedia.org/wiki/INI_file&quot;&gt;INI&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/XML&quot;&gt;XML&lt;/a&gt; atau &lt;a href=&quot;https://www.json.org/&quot;&gt;JSON&lt;/a&gt; bisa langsung kita pindah ke sini.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190802-08.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;mengakses-data-key-value-store&quot;&gt;Mengakses Data Key-Value Store&lt;/h3&gt;

&lt;p&gt;Data yang tersimpan di &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Value Store&lt;/code&gt; bisa diakses via RESTful API, untuk postingan &lt;a href=&quot;http://coding4ever.net/blog/2019/08/02/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-1/&quot;&gt;pertama&lt;/a&gt; ini kita akan menggunakan salah satu tool  REST Client yaitu &lt;a href=&quot;https://www.getpostman.com/downloads/&quot;&gt;Postman&lt;/a&gt; untuk mengakses data tersebut. Adapun endpoint yang digunakan yaitu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/v1/kv&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190802-09.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Untuk response valuenya sudah diencoded menggunakan algoritma Base64, tapi jika ingin langsung menampilkan data aslinya kita tinggal tambahkan parameter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;?raw=true&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190802-10.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;menambahkan-token&quot;&gt;Menambahkan token&lt;/h3&gt;

&lt;p&gt;Kayaknya kurang aman klo semua orang bisa langsung mengakses endpoint &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Value Store&lt;/code&gt; tersebut tanpa memasukan token terlebih dulu. Jadi kita bisa menambahkan token pada saat mengakses endpoint &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Value Store&lt;/code&gt;. Caranya adalah dengan mengedit kembali file konfigurasi consulnya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190802-11-1.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu kita coba akses kembali untuk mengakses endpoint &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Value Store&lt;/code&gt;nya tanpa token. Apakah masih bisa?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190802-12.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Karna sudah tertolak, sekarang coba tambahkan parameter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;?token&lt;/code&gt;  untuk mengakses endpointya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2019/08/20190802-13.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Horeee berhasil :blush:&lt;/p&gt;

&lt;p&gt;Nah dengan adanya fitur &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Value Store&lt;/code&gt; yang di miliki oleh &lt;a href=&quot;https://www.consul.io/&quot;&gt;Consul&lt;/a&gt; ini, akan memudahkan kita jika terjadi perubahan konfigurasi aplikasi karena bisa dilakukan secara terpusat.&lt;/p&gt;

&lt;p&gt;Mungkin cukup ya untuk postingan bagian &lt;a href=&quot;http://coding4ever.net/blog/2019/08/02/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-1/&quot;&gt;pertama&lt;/a&gt; ini, insyaAlloh di postingan &lt;a href=&quot;http://coding4ever.net/blog/2019/08/31/menyimpan-konfigurasi-terpusat-menggunakan-consul-key-value-store-bagian-number-2/&quot;&gt;berikutnya&lt;/a&gt; kita akan bahas bagaimana mengakses data &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Value Store&lt;/code&gt; langsung dari aplikasi yang dibuat menggunakan VB6 dan .NET.&lt;/p&gt;

&lt;p&gt;Oh iya ada yang kelupaan, gimana caranya agar consul bisa diinstall sebagai service (windows service)? Gampang, Anda tinggal ikuti langkah-langkah yang ada di &lt;a href=&quot;https://learn.hashicorp.com/consul/datacenter-deploy/windows&quot;&gt;sini&lt;/a&gt; :grin:.&lt;/p&gt;

&lt;p&gt;Selamat mencoba :blush:&lt;/p&gt;</content><author><name>Kamarudin</name></author><category term="consul" /><category term="key-value" /><summary type="html">Cara apa yang biasa Anda gunakan untuk menyimpan konfigurasi aplikasi? Biasanya ada beberapa pilihan seperti menyimpan dalam format text (INI, XML, JSON), database atau langsung di hardcode di dalam kode program. Nah cara terakhir adalah yang paling ekstrim, jika terjadi perubahan konfigurasi aplikasi berarti kita harus merubah kode program dan melakukan kompilasi ulang :grin:.</summary></entry><entry><title type="html">Membuat jaringan VPN Menggunakan SoftEther VPN Bagian #1</title><link href="http://coding4ever.net/blog/2018/07/05/membuat-jaringan-vpn-menggunakan-softether-vpn-bagian-number-1/" rel="alternate" type="text/html" title="Membuat jaringan VPN Menggunakan SoftEther VPN Bagian #1" /><published>2018-07-05T14:50:45+07:00</published><updated>2018-07-05T14:50:45+07:00</updated><id>http://coding4ever.net/blog/2018/07/05/membuat-jaringan-vpn-menggunakan-softether-vpn-bagian-number-1</id><content type="html" xml:base="http://coding4ever.net/blog/2018/07/05/membuat-jaringan-vpn-menggunakan-softether-vpn-bagian-number-1/">&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/logo/softether-logo.png&quot; alt=&quot;&quot; class=&quot;align-left&quot; /&gt;Salah satu tantangan bagi kita, pengembang software untuk aplikasi bisnis berbasis desktop adalah ketika klien kita bertanya “Mas, databasenya kalau di taruh di server saja bisa ya? Jadi bisa di akses dari mana saja, soalnya butuh juga akses dari luar”, sedangkan kondisi database server mereka hanya mempunyai &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ip private&lt;/code&gt;. Solusi paling cepat dan murah (gratis) yang mungkin bisa kita tawarkan adalah dengan menggunakan software VPN. Ada banyak pilihan software VPN, mulai dari instalasinya yang gampang seperti &lt;a href=&quot;https://www.vpn.net/&quot;&gt;Hamachi&lt;/a&gt; dan &lt;a href=&quot;https://www.zerotier.com/&quot;&gt;ZeroTier One&lt;/a&gt; atau yang sedikit lebih ribet tapi menawarkan segudang fitur yang wah seperti  &lt;a href=&quot;https://www.softether.org/&quot;&gt;SoftEther VPN&lt;/a&gt;.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h3 id=&quot;apa-itu-vpn&quot;&gt;Apa itu VPN?&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_private_network&quot;&gt;VPN (Virtual Private Network)&lt;/a&gt; adalah koneksi private melalui jaringan publik (dalam hal ini internet) yang bersifat virtual, dengan kata lain tidak ada koneksi jaringan secara riil antara 2 atau lebih perangkat (bisa pc, laptop, dll) yang akan berhubungan. VPN bersifat private sehingga tidak semua orang bisa mengaksesnya. Data yang dikirimkan terenkripsi sehingga tetap rahasia meskipun menggunakan jaringan publik. Selain untuk masalah keamanan data, VPN juga bisa digunakan untuk membuat koneksi private dari rumah ke jaringan toko atau kantor misalnya, tanpa menggunakan ip publik, cukup akses internet saja.&lt;/p&gt;

&lt;p&gt;Aslinya saya tidak terlalu tertarik dengan solusi software VPN, tapi ini hanya buat jaga-jaga saja. Seperti yang sudah saya jelaskan di bagian intro.&lt;/p&gt;

&lt;h3 id=&quot;environment-test&quot;&gt;Environment Test&lt;/h3&gt;

&lt;p&gt;Pembuatan jaringan VPN ini menggunakan environment test sebagai berikut:&lt;/p&gt;

&lt;h4 id=&quot;server-vpn&quot;&gt;Server VPN&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Sistem Operasi: Windows 7&lt;/li&gt;
  &lt;li&gt;Software: &lt;a href=&quot;http://www.softether-download.com/en.aspx?product=softether&quot;&gt;SoftEther VPN Server&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Relay Server: VPN Azure Cloud, layanan VPN gratis dari Microsoft&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;client-vpn&quot;&gt;Client VPN&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Sistem Operasi: Windows 7&lt;/li&gt;
  &lt;li&gt;Software: &lt;a href=&quot;http://www.softether-download.com/en.aspx?product=softether&quot;&gt;SoftEther VPN Client&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Selain Windows, &lt;a href=&quot;https://www.softether.org/&quot;&gt;SoftEther VPN&lt;/a&gt; juga mendukung OS Linux, Mac, FreeBSD dan Solaris.&lt;/p&gt;

&lt;h3 id=&quot;skema-jaringan&quot;&gt;Skema Jaringan&lt;/h3&gt;

&lt;p&gt;Sebelum dimulai, kita lihat terlebih dulu skema jaringan yang saya gunakan untuk uji coba membuat jaringan VPN menggunakan SoftEther VPN.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-01.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pada gambar di atas kita bisa melihat, untuk koneksi VPN dari pc/laptop klien ke server VPN kantor melewati VPN Azure Cloud. Apa itu VPN Azure Cloud? VPN Azure Cloud adalah layanan VPN gratis dari Microsoft, dengan menggunakan layanan VPN ini sebagai relay server kita bisa membuat server VPN cukup dengan menggunakan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ip private&lt;/code&gt;. Jadi itu alasan kenapa di &lt;a href=&quot;http://coding4ever.net/blog/2018/07/05/membuat-jaringan-vpn-menggunakan-softether-vpn-bagian-number-1/&quot;&gt;postingan bagian pertama&lt;/a&gt; ini kita menggunakan layanan VPN Azure Cloud.&lt;/p&gt;

&lt;h3 id=&quot;instalasi-softether-vpn-server&quot;&gt;Instalasi SoftEther VPN Server&lt;/h3&gt;

&lt;h4 id=&quot;langkah-1-download-softether-vpn-versi-server&quot;&gt;Langkah 1: Download SoftEther VPN versi Server&lt;/h4&gt;

&lt;p&gt;Klik link &lt;a href=&quot;http://www.softether-download.com/en.aspx?product=softether&quot;&gt;download SoftEther VPN&lt;/a&gt;, kemudian pilih &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SoftEther VPN Server&lt;/code&gt; di bawah drop-down list &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Select Component&lt;/code&gt;. Berikutnya di pilihan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Select Platform&lt;/code&gt; pilih &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-02.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Versi terakhir saat postingan ini ditulis adalah versi (4.27, Build 9668, beta). Karna masih beta (artinya masih dalam tahap pengembangan dan tes), jadi saya akan menggunakan rilis stabil versi sebelumnya yaitu versi (4.25, Build 9656, rtm).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-03.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kemudian klik link &lt;a href=&quot;http://www.softether-download.com/files/softether/v4.25-9656-rtm-2018.01.15-tree/Windows/SoftEther_VPN_Server_and_VPN_Bridge/softether-vpnserver_vpnbridge-v4.25-9656-rtm-2018.01.15-windows-x86_x64-intel.exe&quot;&gt;SoftEther VPN Server and VPN Bridge (Ver 4.25, Build 9656, rtm)&lt;/a&gt;  untuk memulai proses download.&lt;/p&gt;

&lt;h4 id=&quot;langkah-2-instalasi-softether-vpn-versi-server&quot;&gt;Langkah 2: Instalasi SoftEther VPN versi Server&lt;/h4&gt;

&lt;p&gt;Jalankan file EXE SoftEther VPN Server yang sudah didownload untuk memulai instalasi SoftEther VPN versi Server. Setelah instalasi berjalan untuk pertama kali akan tampil jendela welcome, klik tombol Next untuk melanjutkan instalasi.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-04.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Selanjutnya akan tampil jendela untuk memilih jenis &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SoftEther VPN Server&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-05.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pilih SoftEther VPN Server kemudian klik tombol Next. Selanjutnya di jendela End User License Agreement, aktifkan pilihan I agree … , kemudian klik Next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-06.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kemudian klik tombol Next beberapa kali sampai proses instalasi SoftEther VPN Server dimulai.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-07.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah instalasi selesai, di jendela Setup Finished, aktifkan pilihan Start the SoftEther VPN Server Manager kemudian klik tombol Finish.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-08.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;konfigurasi-softether-vpn-server&quot;&gt;Konfigurasi SoftEther VPN Server&lt;/h3&gt;

&lt;h4 id=&quot;langkah-1-mengatur-setting-koneksi-untuk-softether-vpn-server&quot;&gt;Langkah 1: Mengatur setting koneksi untuk SoftEther VPN Server&lt;/h4&gt;

&lt;p&gt;Setelah proses instalasi selesai, akan tampil jendela SoftEther VPN Server Manager, kemudian klik tombol Connect.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-09.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu akan diminta untuk menginputkan password administrator.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-10.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;langkah-2-memilih-jenis-softether-vpn-server&quot;&gt;Langkah 2: Memilih jenis SoftEther VPN Server&lt;/h4&gt;

&lt;p&gt;Pada jendela ini kita aktifkan pilihan Remote Access VPN Server.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-11.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;langkah-3-konfigurasi-virtual-hub&quot;&gt;Langkah 3: Konfigurasi Virtual Hub&lt;/h4&gt;

&lt;p&gt;Jendela berikutnya adalah mengeset konfigurasi Virtual Hub. Penamaan Virtual Hub biasanya berdasarkan lokasi dari server, misal KANTOR-JOGJA-VPN.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-12.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;langkah-4-konfigurasi-dynamic-dns-function&quot;&gt;Langkah 4: Konfigurasi Dynamic DNS Function&lt;/h4&gt;

&lt;p&gt;Jendela berikutnya adalah pengaturan Dynamic DNS Function. Di jendela ini Anda bisa menggunakan pengaturan default atau bisa juga mengganti nilai dari Dynamic DNS Hostname&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-13.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-14.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jika gagal, ada kemungkinan Dynamic DNS Hostname sudah digunakan, Anda bisa mencoba Hostname yang lain. Setelah itu klik tombol Exit&lt;/p&gt;

&lt;h4 id=&quot;langkah-5-konfigurasi-ipsec--l2tp--l2tpv3&quot;&gt;Langkah 5: Konfigurasi IPSec / L2TP / L2TPv3&lt;/h4&gt;

&lt;p&gt;Untuk saat ini kita tidak perlu melakukan perubahan konfigurasi di jendela ini karna kita akan menggunakan layanan VPN Azure Cloud relay server sebagai layanan VPN gratis dari Microsoft.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-15.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kecuali jika ingin menggunakan layanan VPS (Virtual Private Server) sendiri apakah berbasis windows atau linux, Anda harus mengaktifkan pilihan Enable L2TP Server Function, agar server VPNnya bisa diakses dari client.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-16.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;langkah-6-mengaktifkan-layanan-vpn-azure-cloud&quot;&gt;Langkah 6: Mengaktifkan layanan VPN Azure Cloud&lt;/h4&gt;

&lt;p&gt;Langkah berikutnya adalah mengaktifkan layanan VPN Azure Cloud relay server sebagai layanan VPN gratis dari Microsoft.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-17.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Aktifkan pilihan Enable VPN Azure, kemudian tunggu sampai statusnya menjadi Connected. Untuk penamaan hostname VPN Azure, menyesuaikan dengan Konfigurasi Dynamic DNS Function (langkah 4).&lt;/p&gt;

&lt;h4 id=&quot;langkah-7-membuat-user&quot;&gt;Langkah 7: Membuat User&lt;/h4&gt;

&lt;p&gt;Langkah berikutnya adalah membuat user yang boleh mengakses server VPN. Pada langkah ini sangat penting untuk membuat kombinasi password yang kompleks mengingat hubungannya dengan keamanan server VPN Anda.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-18.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-19.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-20.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;langkah-8-konfigurasi-local-bridge&quot;&gt;Langkah 8: Konfigurasi Local Bridge&lt;/h4&gt;

&lt;p&gt;Setelah berhasil membuat user, langkah berikutnya adalah mengeset konfigurasi Local Bridge dengan cara memilih network adapter dari daftar yang tersedia. Pilihlah network adapter yang terhubungan dengan jaringan lokal. Jangan memilih Wi-Fi adapter karena tidak direkomendasikan untuk membuat Local Bridge.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-21.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;langkah-9-mengaktifkan-konfigurasi-securenat-optional&quot;&gt;Langkah 9: Mengaktifkan Konfigurasi SecureNAT (optional)&lt;/h4&gt;

&lt;p&gt;Langkah ini sifatnya optional, jadi tergantung kondisi jaringan lokal dari server VPN Anda. Jika jaringan lokal dari server VPN mengaktifkan fungsi DHCP Server (ip dinamis) maka setting ini tidak perlu diaktifkan, sebaliknya jika jaringan lokal server VPN menggunakan ip statis, maka setting ini harus diaktifkan dengan mengklik tombol Manage Virtual Hub.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-22.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kemudian klik tombol Virtual NAT and Virtual DHCP Server (SecureNAT)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-23.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Untuk melihat konfigurasi default DHCP Server yang digunakan, klik tombol SecureNAT Configuration&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-24.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-25.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Anda bisa mengganti konfigurasi di atas sesuai dengan kebutuhan.&lt;/p&gt;

&lt;p&gt;Kemudian klik tombol Enable SecureNAT untuk mengaktifkan konfigurasi SecureNAT&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-26.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;instalasi-softether-vpn-client&quot;&gt;Instalasi SoftEther VPN Client&lt;/h3&gt;

&lt;h4 id=&quot;langkah-1-download-softether-vpn-versi-client&quot;&gt;Langkah 1: Download SoftEther VPN versi Client&lt;/h4&gt;

&lt;p&gt;Klik link &lt;a href=&quot;http://www.softether-download.com/en.aspx?product=softether&quot;&gt;download SoftEther VPN&lt;/a&gt;, kemudian pilih &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SoftEther VPN Client&lt;/code&gt; di bawah drop-down list &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Select Component&lt;/code&gt;. Berikutnya di pilihan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Select Platform&lt;/code&gt; pilih &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-27.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kemudian download versi stabil pada saat postingan ini ditulis yaitu versi (4.25, Build 9656, rtm)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-28.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kemudian klik link &lt;a href=&quot;http://www.softether-download.com/files/softether/v4.25-9656-rtm-2018.01.15-tree/Windows/SoftEther_VPN_Client/softether-vpnclient-v4.25-9656-rtm-2018.01.15-windows-x86_x64-intel.exe&quot;&gt;SoftEther VPN Client (Ver 4.25, Build 9656, rtm)&lt;/a&gt;  untuk memulai proses download.&lt;/p&gt;

&lt;h4 id=&quot;langkah-2-instalasi-softether-vpn-versi-client&quot;&gt;Langkah 2: Instalasi SoftEther VPN versi Client&lt;/h4&gt;

&lt;p&gt;Jalankan file EXE SoftEther VPN Client yang sudah didownload untuk memulai instalasi SoftEther VPN versi Client. Setelah instalasi berjalan untuk pertama kali akan tampil jendela welcome, klik tombol Next untuk melanjutkan instalasi.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-29.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Selanjutnya akan tampil jendela untuk memilih jenis &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SoftEther VPN Client&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-30.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pilih SoftEther VPN Client kemudian klik tombol Next. Selanjutnya di jendela End User License Agreement, aktifkan pilihan I agree … , kemudian klik Next.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-31.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kemudian klik tombol Next beberapa kali sampai proses instalasi SoftEther VPN Client dimulai.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-32.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah instalasi selesai, di jendela Setup Finished, aktifkan pilihan Start the SoftEther VPN Client Manager kemudian klik tombol Finish.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-33.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;konfigurasi-softether-vpn-client&quot;&gt;Konfigurasi SoftEther VPN Client&lt;/h3&gt;

&lt;h4 id=&quot;langkah-1-membuat-virtual-network-adapter&quot;&gt;Langkah 1: Membuat Virtual Network Adapter&lt;/h4&gt;

&lt;p&gt;Virtual Network Adapter digunakan oleh SoftEther VPN Client untuk melakukan koneksi ke server VPN. Cara untuk menambahkan Virtual Network Adapter dengan mengklik kanan list Virtual Network Adapter kemudian pilih New Virtual Network Adapter…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-34.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-35.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Untuk saat ini kita menggunakan nama default saja, kemudian klik tombol Ok. Setelah itu akan tampil jendela proses pembuatan Virtual Network Adapter.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-36.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Virtual Network Adapter berhasil ditambahkan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-37.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;langkah-2-membuat-koneksi-vpn&quot;&gt;Langkah 2: Membuat Koneksi VPN&lt;/h4&gt;

&lt;p&gt;Klik ganda item Add VPN Connection&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-38.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu akan tampil jendela New VPN Connection setting&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-39.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Untuk informasi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Host Name&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Port Number&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Virtual Hub Name&lt;/code&gt;, nilainya disesuaikan dengan konfigurasi SoftEther Server Manager&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-40.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Selanjutnya klik tombol Advanced Settings …&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-41.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kemudian lakukan perubahan konfigurasi seperti berikut.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-42.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Sampai di sini semua konfigurasi sudah selesai baik di sisi server maupun klien.&lt;/p&gt;

&lt;h4 id=&quot;langkah-3-tes-koneksi-vpn&quot;&gt;Langkah 3: Tes Koneksi VPN&lt;/h4&gt;

&lt;p&gt;Untuk melakukan tes koneksi VPN, klik ganda item Koneksi VPN Kantor Jogja.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-43.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-44.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tunggu beberapa saat, dan jika berhasil status koneksi VPN menjadi Connected&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2018/07/20180705-45.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah terkoneksi ke server VPN, kita bisa melakukan beberapa tes, misal:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Melakukan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ping&lt;/code&gt; ke beberapa pc yang ada di kantor.&lt;/li&gt;
  &lt;li&gt;Melakukan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;remote&lt;/code&gt; menggunakan RDC (Remote Desktop Connection).&lt;/li&gt;
  &lt;li&gt;Atau query langsung ke server database.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Dan jika berhasil, selamat !!!, Anda sudah mempunyai server VPN sendiri dan bisa mengakses jaringan internal kantor dari mana saja.&lt;/p&gt;

&lt;h3 id=&quot;kesimpulan&quot;&gt;Kesimpulan&lt;/h3&gt;

&lt;p&gt;Dengan menggunakan software &lt;a href=&quot;https://www.softether.org/&quot;&gt;SoftEther VPN&lt;/a&gt; dan layanan VPN Azure Cloud dari Microsoft, proses pembuatan server VPN menjadi mudah cukup menggunakan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ip private&lt;/code&gt; dengan biaya 0 rupiah.&lt;/p&gt;

&lt;p&gt;Selamat mencoba :blush:&lt;/p&gt;

&lt;p&gt;Referensi:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;https://www.softether.org/&lt;/li&gt;
  &lt;li&gt;http://www.vpnazure.net/en/&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Kamarudin</name></author><category term="server vpn" /><category term="vpn server" /><category term="vpn client" /><category term="hamachi" /><category term="zerotier" /><category term="softether vpn" /><category term="azure cloud" /><summary type="html">Salah satu tantangan bagi kita, pengembang software untuk aplikasi bisnis berbasis desktop adalah ketika klien kita bertanya “Mas, databasenya kalau di taruh di server saja bisa ya? Jadi bisa di akses dari mana saja, soalnya butuh juga akses dari luar”, sedangkan kondisi database server mereka hanya mempunyai ip private. Solusi paling cepat dan murah (gratis) yang mungkin bisa kita tawarkan adalah dengan menggunakan software VPN. Ada banyak pilihan software VPN, mulai dari instalasinya yang gampang seperti Hamachi dan ZeroTier One atau yang sedikit lebih ribet tapi menawarkan segudang fitur yang wah seperti SoftEther VPN.</summary></entry><entry><title type="html">GitLab CI untuk .NET Developer Bagian #2</title><link href="http://coding4ever.net/blog/2017/09/09/gitlab-ci-untuk-net-developer-bagian-number-2/" rel="alternate" type="text/html" title="GitLab CI untuk .NET Developer Bagian #2" /><published>2017-09-09T22:17:36+07:00</published><updated>2017-09-09T22:17:36+07:00</updated><id>http://coding4ever.net/blog/2017/09/09/gitlab-ci-untuk-net-developer-bagian-number-2</id><content type="html" xml:base="http://coding4ever.net/blog/2017/09/09/gitlab-ci-untuk-net-developer-bagian-number-2/">&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/logo/gitlabci-logo.png&quot; alt=&quot;&quot; class=&quot;align-left&quot; /&gt;Melanjutkan pembahasan tentang &lt;a href=&quot;http://coding4ever.net/categories/continuous-integration/&quot;&gt;Continuous Integration&lt;/a&gt; menggunakan &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt;. Di &lt;a href=&quot;http://coding4ever.net/blog/2017/08/30/gitlab-ci-untuk-net-developer-bagian-number-1/&quot;&gt;postingan&lt;/a&gt; sebelumnya kita sudah melakukan konfigurasi &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt; dengan menambahkan file  &lt;a href=&quot;https://gist.github.com/k4m4r82/f88e4bb02eb8ade0d9d049a07ec6ee30&quot;&gt;.gitlab-ci.yml&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Di konfigurasi awal ini kita sudah menambahkan dua job yang bertugas untuk merestore paket nuget dan melakukan proses build. Berikutnya kita akan menambahkan satu job lagi yang bertugas untuk membuat paket instalasi menggunakan &lt;a href=&quot;http://coding4ever.net/categories/inno-setup/&quot;&gt;Inno Setup&lt;/a&gt; jika job pertama dan kedua berhasil dijalankan. Nah dengan menggunakan CI semua proses ini bisa dilakukan secara otomatis dan terpusat, sehingga kita mempunyai histori hasil build dari waktu ke waktu. Jadi untuk mencari file setup/paket installer terakhir enggak usah lagi nanya ke developer karena bisa langsung kita download dari server CI-nya.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/09/20170909-07.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;inno-setup&quot;&gt;Inno Setup&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;http://jrsoftware.org/&quot;&gt;Inno Setup&lt;/a&gt; adalah tool yang digunakan untuk membuat &lt;a href=&quot;http://coding4ever.net/categories/tools-installer/&quot;&gt;paket installer&lt;/a&gt; yang gratis dan open source. Selain &lt;a href=&quot;http://jrsoftware.org/&quot;&gt;Inno Setup&lt;/a&gt;, kita juga bisa menggunakan &lt;a href=&quot;http://coding4ever.net/categories/tools-installer/&quot;&gt;tool installer&lt;/a&gt; lainnya seperti &lt;a href=&quot;http://nsis.sourceforge.net/&quot;&gt;NSIS&lt;/a&gt;. Untuk informasi lebih lanjut tentang &lt;a href=&quot;http://jrsoftware.org/&quot;&gt;Inno Setup&lt;/a&gt; dan &lt;a href=&quot;http://nsis.sourceforge.net/&quot;&gt;NSIS&lt;/a&gt; bisa langsung ke &lt;a href=&quot;http://coding4ever.net/categories/inno-setup/&quot;&gt;sini&lt;/a&gt; dan &lt;a href=&quot;http://coding4ever.net/categories/nsis/&quot;&gt;sini&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Jadi di postingan kali ini kita akan menggunakan &lt;a href=&quot;http://jrsoftware.org/&quot;&gt;Inno Setup&lt;/a&gt; untuk keperluan pembuatan file setup/paket installer. Sebagai contoh, berikut adalah skrip &lt;a href=&quot;http://jrsoftware.org/&quot;&gt;Inno Setup&lt;/a&gt; yang digunakan untuk membuat file setup/paket installer untuk project &lt;a href=&quot;https://gitlab.com/rudi.krsoftware/Northwind&quot;&gt;Northwind&lt;/a&gt; yang kita gunakan sebagai contoh project.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/5eee78a4609377dcce794683958b9147.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Skrip Inno Setup ini kita tambahkan ke folder yang sama dengan folder source code kemudian kita simpan juga ke repository git.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/09/20170909-01.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/09/20170909-02.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;menambahkan-job-untuk-membuat-paket-instalasi&quot;&gt;Menambahkan Job untuk Membuat Paket Instalasi&lt;/h3&gt;

&lt;p&gt;Setelah menambahkan file &lt;a href=&quot;https://gist.github.com/k4m4r82/5eee78a4609377dcce794683958b9147&quot;&gt;Inno Setup&lt;/a&gt;, langkah berikutnya adalah kita mengedit file &lt;a href=&quot;https://gist.github.com/k4m4r82/f88e4bb02eb8ade0d9d049a07ec6ee30&quot;&gt;.gitlab-ci.yml&lt;/a&gt; untuk menambahkan job baru yang bertugas untuk mengeksekusi file &lt;a href=&quot;https://gist.github.com/k4m4r82/5eee78a4609377dcce794683958b9147&quot;&gt;setup.iss&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Berikut isi file &lt;a href=&quot;https://gist.github.com/k4m4r82/f88e4bb02eb8ade0d9d049a07ec6ee30&quot;&gt;.gitlab-ci.yml&lt;/a&gt; yang sudah kita edit:&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/d07cb047d26f2df4778606c48db35b14.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Coba perhatikan skrip di atas, di baris ke-4 kita menambahkan variabel &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;InnoSetupPath&lt;/code&gt; yang isinya adalah lokasi file ISCC.exe yang digunakan untuk mengompile skrip &lt;a href=&quot;https://gist.github.com/k4m4r82/5eee78a4609377dcce794683958b9147&quot;&gt;inno setup&lt;/a&gt;. Kemudian di baris ke-10 kita menambahkan stage baru dengan nama &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setup&lt;/code&gt; yang digunakan untuk job baru yang akan kita tambahkan yaitu job &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create_file_setup&lt;/code&gt;. Terakhir di baris ke-29, kita menambahkan job baru dengan nama &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create_file_setup&lt;/code&gt;. Job ini akan melakukan proses kompilasi skrip &lt;a href=&quot;https://gist.github.com/k4m4r82/5eee78a4609377dcce794683958b9147&quot;&gt;inno setup&lt;/a&gt; menjadi file setup/paket instalasi (baris ke-33), kemudian mengupload ke server GitLab. Untuk keperluan upload ini, kita menambahkan keyword &lt;a href=&quot;https://docs.gitlab.com/ee/user/project/pipelines/job_artifacts.html&quot;&gt;artifacts&lt;/a&gt; masih di job &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create_file_setup&lt;/code&gt;, kemudian diikuti dengan beberapa konfigurasi. &lt;a href=&quot;https://docs.gitlab.com/ee/user/project/pipelines/job_artifacts.html&quot;&gt;Artifact&lt;/a&gt; adalah output dari proses build, bisa berupa file exe, dll atau file dengan ekstensi lainnya&lt;/p&gt;

&lt;p&gt;Setelah itu simpan perubahan file &lt;a href=&quot;https://gist.github.com/k4m4r82/d07cb047d26f2df4778606c48db35b14&quot;&gt;.gitlab-ci.yml&lt;/a&gt; ke repository  git.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/09/20170909-03.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kemudian langsung di push, untuk melihat apakah semua job (restore, build dan pembuatan paket instalasi) berhasil dijalankan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/09/20170909-04.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tunggu beberapa saat, kemudian cek link &lt;a href=&quot;https://gitlab.com/rudi.krsoftware/Northwind/pipelines&quot;&gt;Pipelines&lt;/a&gt; untuk melihat status &lt;a href=&quot;https://gitlab.com/rudi.krsoftware/Northwind/pipelines&quot;&gt;Pipelines&lt;/a&gt; yang sedang dijalankan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/09/20170909-05.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.gitlab.com/ee/ci/pipelines.html&quot;&gt;Pipelines&lt;/a&gt; digunakan untuk mengelompokkan job. Jika ingin melihat job apa saja yang ada di dalam &lt;a href=&quot;https://docs.gitlab.com/ee/ci/pipelines.html&quot;&gt;Pipelines&lt;/a&gt;, kita tinggal klik aja link statusnya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/09/20170909-06.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jika sudah selesai, kita bisa melihat link download &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;artifacts&lt;/code&gt; di kolom terakhir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/09/20170909-07.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/09/20170909-08.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/09/20170909-09.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Selesai…, untuk contoh lengkap hasil buildnya bisa Anda cek di &lt;a href=&quot;https://gitlab.com/rudi.krsoftware/Northwind/pipelines&quot;&gt;sini&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Selamat &lt;a href=&quot;https://gitlab.com/rudi.krsoftware/Northwind&quot;&gt;MENCOBA&lt;/a&gt; :blush:&lt;/p&gt;</content><author><name>Kamarudin</name></author><category term="continuous integration" /><category term="gitlab ci" /><category term="gitLab runner" /><category term="git" /><category term="build" /><category term="deploy" /><category term="job" /><category term="inno setup" /><summary type="html">Melanjutkan pembahasan tentang Continuous Integration menggunakan GitLab CI. Di postingan sebelumnya kita sudah melakukan konfigurasi GitLab CI dengan menambahkan file .gitlab-ci.yml.</summary></entry><entry><title type="html">GitLab CI untuk .NET Developer Bagian #1</title><link href="http://coding4ever.net/blog/2017/08/30/gitlab-ci-untuk-net-developer-bagian-number-1/" rel="alternate" type="text/html" title="GitLab CI untuk .NET Developer Bagian #1" /><published>2017-08-30T12:32:47+07:00</published><updated>2017-08-30T12:32:47+07:00</updated><id>http://coding4ever.net/blog/2017/08/30/gitlab-ci-untuk-net-developer-bagian-number-1</id><content type="html" xml:base="http://coding4ever.net/blog/2017/08/30/gitlab-ci-untuk-net-developer-bagian-number-1/">&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/logo/gitlabci-logo.png&quot; alt=&quot;&quot; class=&quot;align-left&quot; /&gt;Sudah hampir setahun saya menggunakan &lt;a href=&quot;http://coding4ever.net/categories/jenkins/&quot;&gt;Jenkins&lt;/a&gt; sebagai tool/software CI &lt;a href=&quot;http://coding4ever.net/categories/continuous-integration/&quot;&gt;Continuous Integration&lt;/a&gt;. Ada banyak manfaat yang saya rasakan terutama untuk mengurangi pekerjaan-pekerjaan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sepele&lt;/code&gt; tapi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;berulang&lt;/code&gt; seperti pembuatan paket instalasi, upload updatean terbaru ke server atau deploy web api/service ke server development atau production.  Dengan menggunakan software CI(&lt;a href=&quot;http://coding4ever.net/categories/continuous-integration/&quot;&gt;Continuous Integration&lt;/a&gt;) seperti &lt;a href=&quot;http://coding4ever.net/categories/jenkins/&quot;&gt;Jenkins&lt;/a&gt; pekerjaan-pekerjaan membosankan tersebut bisa dilakukan hanya dengan mengklik satu tombol atau bisa juga dibuat otomatis ketika kita mem-push perubahan source code ke repository git. Waktu yang dibutuhkan juga biasanya tidak lama sekitar 1-3 menit, ya tergantung besar atau kecilnya project yang akan dibuild/deploy.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-011.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Selain itu dari sisi dokumentasi juga ikut terbantu, karena tool seperti &lt;a href=&quot;http://coding4ever.net/categories/jenkins/&quot;&gt;Jenkins&lt;/a&gt; dan dengan bantuan pluginnya bisa otomatis mengenerate history build dari waktu ke waktu.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-021.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tapi pada postingan kali ini saya ingin membahas tool/software CI(&lt;a href=&quot;http://coding4ever.net/categories/continuous-integration/&quot;&gt;Continuous Integration&lt;/a&gt;) yang lain yaitu &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt;. Beberapa hari ini saya menyempatkan untuk mencoba &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt; dan kesimpulannya ada beberapa kelebihan &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt; dibandingkan &lt;a href=&quot;http://coding4ever.net/categories/jenkins/&quot;&gt;Jenkins&lt;/a&gt; yaitu:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt; sudah terintegrasi dengan &lt;a href=&quot;https://gitlab.com/&quot;&gt;GitLab &lt;/a&gt;. &lt;a href=&quot;https://gitlab.com/&quot;&gt;GitLab &lt;/a&gt; adalah layanan cloud untuk repository git, jadi mirip dengan &lt;a href=&quot;http://github.com/&quot;&gt;github&lt;/a&gt; atau &lt;a href=&quot;http://bitbucket.org/&quot;&gt;bitbucket&lt;/a&gt;. Kelebihan gitlab dibandingkan dengan github dan bitbucket adalah untuk layanan gratisnya tidak ada pembatasan jumlah tim atau jumlah repository private yang bisa dibuat. Sedangkan untuk &lt;a href=&quot;http://coding4ever.net/categories/jenkins/&quot;&gt;Jenkins&lt;/a&gt; repository gitnya harus diinstall terpisah atau menggunakan layanan repository git yang sudah ada seperti gitlab, github atau bitbucket.&lt;/li&gt;
  &lt;li&gt;Konfigurasi Job di &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt; lebih sederhana dibandingkan &lt;a href=&quot;http://coding4ever.net/categories/jenkins/&quot;&gt;Jenkins&lt;/a&gt;. Konfigurasi job &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt; menggunakan file text biasa dengan format &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML&quot;&gt;YAML&lt;/a&gt;, sehingga file konfigurasi ini bisa kita tambahkan ke repository git.&lt;/li&gt;
  &lt;li&gt;Satu konfigurasi &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt; sudah bisa digunakan untuk beberapa &lt;a href=&quot;https://docs.gitlab.com/ee/ci/yaml/#jobs&quot;&gt;job&lt;/a&gt; dan &lt;a href=&quot;https://docs.gitlab.com/ee/ci/yaml/README.html#stages&quot;&gt;stage&lt;/a&gt; sedangkan dengan &lt;a href=&quot;http://coding4ever.net/categories/jenkins/&quot;&gt;Jenkins&lt;/a&gt; kita harus membuat beberapa job untuk masing-masing stage (&lt;a href=&quot;https://en.wiktionary.org/wiki/CMIIW&quot;&gt;CMIIW&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;Penggunaan  &lt;a href=&quot;http://coding4ever.net/categories/jenkins/&quot;&gt;Jenkins&lt;/a&gt; sangat cocok untuk keperluan internal kantor, jadi jika ingin digunakan secara public (di akses via internet) harus menyediakan mesin khusus yang mempunyai ip public atau bisa juga menggunakan VPS. Sedangkan untuk &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt; sendiri kita cukup menyediakan mesin yang mempunyai akses internet dan tidak harus mempunyai ip public.&lt;/li&gt;
  &lt;li&gt;Apalagi ya…, silahkan dicoba sendiri he he :grin:&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;continuous-integration&quot;&gt;Continuous Integration&lt;/h3&gt;

&lt;p&gt;Sebelum kita lanjut ke pembahasan &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt;, saya ingin mereview kembali apa yang dimaksud dengan CI (&lt;a href=&quot;http://coding4ever.net/categories/continuous-integration/&quot;&gt;Continuous Integration&lt;/a&gt;).  &lt;a href=&quot;http://coding4ever.net/categories/continuous-integration/&quot;&gt;Continuous Integration&lt;/a&gt;, untuk selanjutnya kita sebut CI saja, merupakan salah satu kegiatan untuk meningkatkan produktivitas dalam pengembangan aplikasi di mana seluruh hasil kerja (source code) dari masing-masing developer digabungkan (push) ke dalam satu wadah (server repository source code). Bisa sekali sehari, bisa juga beberapa kali dalam sehari. Setiap penggabungan source code akan diverifikasi secara otomatis oleh server CI, yang memungkinkan tim untuk mendeteksi secara dini jika ada masalah/konflik/error pada saat penggabungan source code.&lt;/p&gt;

&lt;p&gt;Setelah penggabungan hasil kerja (source code) selesai, server CI otomatis akan melakukan proses build untuk memastikan tidak ada kode yang merusak/membuat proses build gagal. Jadi semakin cepat kegagalan build ini diketahui semakin cepat pula kita meresponnya. Dan jika proses build-nya berhasil akan dilanjutkan dengan proses deploy. Selain itu server CI juga bisa dikonfigurasi untuk melakukan proses lain seperti menjalankan unit testing, integration testing dan testing otomatis lainnya.&lt;/p&gt;

&lt;p&gt;Sebagai .NET developer kita sudah biasa melakukan proses build dengan menekan tombol F5 (Start Debugging) atau Ctrl+F5 (Start Without Debugging) baik pada waktu development atau perbaikan bug. Sedangkan untuk contoh deploy anggap saja seperti kita membuat paket installer yang akan didistribusikan ke komputer/server klien. Nah dengan menggunakan CI semua proses ini bisa dilakukan secara otomatis dan terpusat, sehingga kita mempunyai arsip hasil build dan deploy dari waktu ke waktu. Jadi untuk mencari file setup/paket installer terakhir enggak usah lagi nanya ke developer karena bisa langsung kita download dari server CI-nya.&lt;/p&gt;

&lt;p&gt;Proses build ini selain bisa dibuat otomatis setiap kita mem-push source code ke server repository bisa juga kita buatkan jadwalnya, misal pas jam makan siang atau jam pulang kantor. Jadi di kantor dibuat kesepakatan/aturan klo ada yang merusak build pas jam makan siang enggak boleh makan siang sampai proses build-nya berhasil atau yang merusak build pas jam pulang kantor enggak boleh pulang sampai proses build-nya berhasil :grin:&lt;/p&gt;

&lt;p&gt;Jadi dengan menggunakan CI, alur kerja kita lebih kurang seperti berikut :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Menulis kode, build dan tes di komputer masing-masing (seperti biasa).&lt;/li&gt;
  &lt;li&gt;Commit dan push kode ke server repository/source control seperti GIT atau SVN.&lt;/li&gt;
  &lt;li&gt;Server CI akan meng-clone/pull repository kemudian melakukan build, menjalankan tes otomatis (jika ada) dan deploy secara otomatis. Jika buildnya gagal ulangi lagi langkah pertama.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Nah mudah-mudahan sampai di sini sudah punya gambaran ya tentang apa itu &lt;a href=&quot;http://coding4ever.net/categories/continuous-integration/&quot;&gt;Continuous Integration&lt;/a&gt; dan bagaimana cara kerjanya.&lt;/p&gt;

&lt;h3 id=&quot;apa-saja-yang-perlu-dipelajari-&quot;&gt;Apa saja yang perlu dipelajari ?&lt;/h3&gt;

&lt;p&gt;Untuk belajar CI, tentu saja ada pengetahun penunjang yang perlu Anda pelajari yaitu penggunaan &lt;a href=&quot;https://en.wikipedia.org/wiki/Version_control&quot;&gt;Source/Version Control&lt;/a&gt; terutama &lt;a href=&quot;https://git-scm.com/&quot;&gt;GIT&lt;/a&gt; dan aplikasi GIT Client seperti &lt;a href=&quot;https://tortoisegit.org/download/&quot;&gt;TortoiseGit&lt;/a&gt;. Pengetahun lainnya adalah pembuatan paket instalasi menggunakan &lt;a href=&quot;http://coding4ever.net/categories/inno-setup/&quot;&gt;Inno Setup&lt;/a&gt; untuk aplikasi desktop atau bisa juga pengetahuan mendeploy web api/service ke server.&lt;/p&gt;

&lt;h3 id=&quot;gitlab-ci&quot;&gt;GitLab CI&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt; adalah salah satu tool/software &lt;a href=&quot;http://coding4ever.net/categories/continuous-integration/&quot;&gt;Continuous Integration&lt;/a&gt; gratis yang merupakan bagian dari &lt;a href=&quot;https://about.gitlab.com/&quot;&gt;GitLab&lt;/a&gt;. &lt;a href=&quot;https://about.gitlab.com/&quot;&gt;GitLab&lt;/a&gt; sendiri merupakan layanan cloud repository git, jadi mirip dengan &lt;a href=&quot;http://github.com/&quot;&gt;github&lt;/a&gt; atau &lt;a href=&quot;http://bitbucket.org/&quot;&gt;bitbucket&lt;/a&gt;. Kelebihan dari &lt;a href=&quot;https://about.gitlab.com/&quot;&gt;GitLab&lt;/a&gt; ini sendiri, untuk versi gratisnya tidak dibatasi seperti halnya &lt;a href=&quot;http://github.com/&quot;&gt;github&lt;/a&gt; dan &lt;a href=&quot;http://bitbucket.org/&quot;&gt;bitbucket&lt;/a&gt;. Jadi dengan versi gratisnya tidak ada pembatasan jumlah private repository yang bisa kita buat ataupun jumlah tim yang terlibat. Menarik bukan untuk sebuah layanan cloud repository git yang gratis.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt; sendiri kalo kita lihat lebih mirip dengan sebuah dashboard untuk mengelola job dan log hasil buildnya. Jadi aslinya yang melakukan build dan deploy itu bukanlah &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt; tapi tool lain yang disebut dengan  &lt;a href=&quot;https://docs.gitlab.com/runner/#using-gitlab-runner&quot;&gt;GitLab Runner&lt;/a&gt;. &lt;a href=&quot;https://docs.gitlab.com/runner/#using-gitlab-runner&quot;&gt;GitLab Runner&lt;/a&gt; ini harus kita install di mesin (pc/server) yang mempunyai akses internet agar bisa terhubung ke service &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt;. Mesin untuk &lt;a href=&quot;https://docs.gitlab.com/runner/#using-gitlab-runner&quot;&gt;GitLab Runner&lt;/a&gt; tidak harus mempunyai ip public yang penting terkoneksi dengan internet.&lt;/p&gt;

&lt;p&gt;Idenya sederhana tapi brilian, dengan konsep seperti ini akan menghemat resource dari server &lt;a href=&quot;https://about.gitlab.com/&quot;&gt;GitLab&lt;/a&gt; itu sendiri, karena semua resource yang dibutuhkan untuk proses build dan deploy di tanggung oleh mesin dari user/developer. Tapi dari sisi user/developer juga diuntungkan karena mesin untuk build dan deploynya adalah milik kita sendiri, sehingga kita punya akses full untuk setup/konfigurasi tool/software apa saja yang dibutuhkan untuk proses build dan deploy tersebut.&lt;/p&gt;

&lt;h3 id=&quot;gitlab-runner&quot;&gt;GitLab Runner&lt;/h3&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.gitlab.com/runner/#using-gitlab-runner&quot;&gt;GitLab Runner&lt;/a&gt; adalah tool/software yang bertugas untuk menjalankan job dan mengirimkan kembali hasilnya ke &lt;a href=&quot;https://about.gitlab.com/&quot;&gt;GitLab&lt;/a&gt;, nah data-data inilah yang akan diolah oleh &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;GitLab Runner bisa diinstall untuk GNU/Linux, macOS, FreeBSD, dan Windows.&lt;/p&gt;

&lt;h4 id=&quot;instalasi-gitlab-runner&quot;&gt;Instalasi GitLab Runner&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.gitlab.com/runner/install/windows.html&quot;&gt;Instalasi GitLab Runner&lt;/a&gt; sendiri sangat mudah, ditambah dengan dokumentasi yang lengkap. Jadi seharusnya Anda tidak akan mendapatkan masalah untuk langkah-langkah instalasinya. Untuk petunjuknya bisa ada cek di &lt;a href=&quot;https://docs.gitlab.com/runner/install/windows.html&quot;&gt;sini&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Untuk memastikan instalasinya GitLab Runnernya berhasil, silahkan Anda cek service GitLab Runnernya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-03.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Selain menginstall &lt;a href=&quot;https://docs.gitlab.com/runner/install/&quot;&gt;GitLab Runner&lt;/a&gt;, kita juga perlu menginstall beberapa tool pendukung seperti:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;.NET Framework 4.0, 4.5.x&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=48159&quot;&gt;Microsoft Build 2015&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Source/version control &lt;a href=&quot;https://git-scm.com/&quot;&gt;Git&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Pembuat paket installer seperti &lt;a href=&quot;http://www.jrsoftware.org/&quot;&gt;Inno Setup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.nuget.org/downloads&quot;&gt;Nuget&lt;/a&gt; untuk merestore paket nuget&lt;/li&gt;
  &lt;li&gt;FTP Client seperti &lt;a href=&quot;https://winscp.net/eng/index.php&quot;&gt;WinSCP&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Intinya semua tool pendukung di atas, diinstall sesuai dengan kebutuhan environment development.&lt;/p&gt;

&lt;h4 id=&quot;mendaftarkan-repository-ke-gitlab-runner&quot;&gt;Mendaftarkan Repository ke GitLab Runner&lt;/h4&gt;

&lt;p&gt;Setelah instalasi GitLab Runner, berikutnya adalah mendaftarkan repository git ke GitLab Runner. Berikut langkah-langkahnya:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Langkah 1&lt;/strong&gt;.	Login ke &lt;a href=&quot;https://about.gitlab.com/&quot;&gt;GitLab&lt;/a&gt;, klo belum punya ya silahkan daftar terlebih dulu.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Langkah 2&lt;/strong&gt;.	Buat repository baru&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-04.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Langkah 3&lt;/strong&gt;.	Setelah membuat repositorynya berhasil, klik link &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Settings&lt;/code&gt; -&amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pipelines&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-05.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Scroll ke bawah sedikit, kemudian catat informasi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Specific Runners&lt;/code&gt; untuk poin 2 dan 3.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-06.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kemudian di bagian &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Shared Runners&lt;/code&gt; klik tombol &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Disable shared Runners&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-07.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Langkah 4&lt;/strong&gt;.	Berikutnya adalah mengaktifkan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command Prompt&lt;/code&gt; dengan mode &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Administrator&lt;/code&gt; kemudian masuk ke folder instalasi GitLab Runner&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-08.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Setelah itu ketik perintah &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gitlab-runner register&lt;/code&gt;, kemudian tinggal jawab pertanyaan yang ada termasuk informasi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Specific Runners&lt;/code&gt; yang kita dapatkan di &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;langkah 3&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-09.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Jika proses registrasinya berhasil, kita bisa cek runner aktifnya dibawah informasi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Specific Runners&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-10.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;contoh-project&quot;&gt;Contoh Project&lt;/h3&gt;

&lt;p&gt;Untuk keperluan uji coba kali ini saya menggunakan contoh aplikasi Northwind yang bisa Anda download di &lt;a href=&quot;https://github.com/k4m4r82/RepositoryPattern&quot;&gt;sini&lt;/a&gt;. Setelah itu kita &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;push&lt;/code&gt; source codenya ke link repository gitlab yang sudah kita buat di langkah-langkah sebelumnya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-11.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dan untuk proses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;push&lt;/code&gt;-nya saya menggunakan &lt;a href=&quot;https://tortoisegit.org/download/&quot;&gt;TortoiseGit&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-12.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-13.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-14.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;menambahkan-file-gitlab-ciyml&quot;&gt;Menambahkan file .gitlab-ci.yml&lt;/h3&gt;

&lt;p&gt;Untuk melakukan konfigurasi &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt;, kita perlu menambahkan file dengan nama &lt;a href=&quot;https://docs.gitlab.com/ee/ci/yaml/&quot;&gt;.gitlab-ci.yml&lt;/a&gt;. File ini adalah file text biasa yang menggunakan format &lt;a href=&quot;https://en.wikipedia.org/wiki/YAML&quot;&gt;YAML&lt;/a&gt;, sehingga file konfigurasi ini bisa kita tambahkan ke folder source code kemudian kita simpan juga ke repository git.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-15.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-161.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Berikut contoh isi file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitlab-ci.yml&lt;/code&gt;&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/f88e4bb02eb8ade0d9d049a07ec6ee30.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Coba perhatikan skrip di atas, di baris ke-6 kita mendefinisikan beberapa stage yaitu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;restore&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build&lt;/code&gt;, kita bisa juga menambahkan stage yang lain misal &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deploy&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;development&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;production&lt;/code&gt;, dst. Stage digunakan untuk menentukan jenis dari job. Jadi perlu diingat bahwa stage dan job itu berbeda, walaupun dibanyak contoh menggunakan nama yang sama untuk stage dan job.&lt;/p&gt;

&lt;p&gt;Eksekusi antar job di &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt; itu sifatnya independen atau dengan kata lain tidak ada hubungan antar job. Ketika job B membutuhkan file yang dihasilkan oleh job A secara default tidak bisa, sehingga kita perlu menambahkan konfigurasi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cache&lt;/code&gt;, seperti yang terlihat di baris ke-10. Kita mendaftarkan folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; ke dalam konfigurasi &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cache&lt;/code&gt;. Folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; ini berisi file-file library (*.dll) hasil dari job &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;restore_nuget_package&lt;/code&gt;. Semua file yang ada di folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lib&lt;/code&gt; ini dibutuhkan pada saat menjalankan job &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build_solution&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Berikutnya kita pindah ke baris 15, di baris ini kita mendefinisikan job dengan nama &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;restore_nuget_package&lt;/code&gt; dengan tipe stage &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;restore&lt;/code&gt;, kemudian menjalankan skrip untuk merestore paket nuget.&lt;/p&gt;

&lt;p&gt;Terakhir di baris ke-21, kita mendefinisikan job lain dengan nama &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;build_solution&lt;/code&gt;, sesuai namanya job ini digunakan untuk membuild solution atau project atau klo lewat IDE Visual Studio .NET kita menekan tombol F5 (Start Debugging) atau Ctrl+F5 (Start Without Debugging).&lt;/p&gt;

&lt;h3 id=&quot;cara-mengecekmemvalidasi-skrip-file-gitlab-ciyml&quot;&gt;Cara Mengecek/Memvalidasi Skrip File .gitlab-ci.yml&lt;/h3&gt;

&lt;p&gt;Sebelum kita menambahkan file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitlab-ci.yml&lt;/code&gt; ke repository git, ada baiknya kita cek terlebih dahulu apakah script yang kita tuliskan sudah benar atau belum.
&lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt; sudah menyediakan link khusus untuk mengeceknya, yang bisa Anda cek di &lt;a href=&quot;https://gitlab.com/ci/lint&quot;&gt;sini&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-171.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;testing-build&quot;&gt;Testing Build&lt;/h3&gt;

&lt;p&gt;Untuk testing build kita tinggal melakukan push ke repository git.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-181.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kemudian untuk melihat log progres buildnya kita bisa cek link &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pipelines&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-19.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Gambar detail job yang sedang dijalankan&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-201.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Untuk melihat detail log dari masing-masing job, tinggal kita klik nama jobnya, misal job restore nuget package&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-211.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;job build solution&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-221.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Status proses build berhasil&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170830-231.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Untuk contoh lengkap hasil buildnya bisa Anda cek di &lt;a href=&quot;https://gitlab.com/rudi.krsoftware/Northwind/pipelines&quot;&gt;sini&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Akhirnya selesai juga postingan &lt;a href=&quot;http://coding4ever.net/blog/2017/08/30/gitlab-ci-untuk-net-developer-bagian-number-1/&quot;&gt;GitLab CI untuk .NET Developer Bagian #1&lt;/a&gt;, dan mudah-mudahan bisa dipahami :grin:. Untuk postingan berikutnya insyaAlloh kita akan menambahkan job untuk membuat paket instalasi menggunakan Inno Setup dan menguploadnya sehingga bisa langsung didownload via  Dashboard &lt;a href=&quot;https://about.gitlab.com/features/gitlab-ci-cd/&quot;&gt;GitLab CI&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Selamat &lt;a href=&quot;https://gitlab.com/rudi.krsoftware/Northwind/pipelines&quot;&gt;MENCOBA&lt;/a&gt; :blush:&lt;/p&gt;</content><author><name>Kamarudin</name></author><category term="continuous integration" /><category term="gitlab ci" /><category term="gitLab runner" /><category term="git" /><category term="build" /><category term="deploy" /><category term="job" /><summary type="html">Sudah hampir setahun saya menggunakan Jenkins sebagai tool/software CI Continuous Integration. Ada banyak manfaat yang saya rasakan terutama untuk mengurangi pekerjaan-pekerjaan sepele tapi berulang seperti pembuatan paket instalasi, upload updatean terbaru ke server atau deploy web api/service ke server development atau production. Dengan menggunakan software CI(Continuous Integration) seperti Jenkins pekerjaan-pekerjaan membosankan tersebut bisa dilakukan hanya dengan mengklik satu tombol atau bisa juga dibuat otomatis ketika kita mem-push perubahan source code ke repository git. Waktu yang dibutuhkan juga biasanya tidak lama sekitar 1-3 menit, ya tergantung besar atau kecilnya project yang akan dibuild/deploy.</summary></entry><entry><title type="html">Membuat Service SMS Gateway untuk Engine Gammu</title><link href="http://coding4ever.net/blog/2017/08/22/membuat-service-sms-gateway-untuk-engine-gammu/" rel="alternate" type="text/html" title="Membuat Service SMS Gateway untuk Engine Gammu" /><published>2017-08-22T15:59:07+07:00</published><updated>2017-08-22T15:59:07+07:00</updated><id>http://coding4ever.net/blog/2017/08/22/membuat-service-sms-gateway-untuk-engine-gammu</id><content type="html" xml:base="http://coding4ever.net/blog/2017/08/22/membuat-service-sms-gateway-untuk-engine-gammu/">&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/logo/gammu-logo.png&quot; alt=&quot;&quot; class=&quot;align-left&quot; /&gt;Pasti udah pada tau kan apa itu &lt;a href=&quot;https://wammu.eu/gammu/&quot;&gt;Gammu&lt;/a&gt; ? Klo enggak ya keterlaluan he he. Itu loh engine yang biasa digunakan untuk mengirim dan menerima sms dan biasanya sering digunakan untuk membuat sms gateway.&lt;/p&gt;

&lt;p&gt;Di postingan ini saya tidak akan membahas bagaimana cara instalasi &lt;a href=&quot;https://wammu.eu/gammu/&quot;&gt;Gammu&lt;/a&gt;, konfigurasi dan database yang digunakan. Jadi saya mengasumsikan bahwa service Gammu Anda (GammuSMSD) sudah berjalan dengan baik, dengan kata lain jika ada sms masuk ke nomor yang Anda gunakan sebagai sms center, maka service &lt;a href=&quot;https://wammu.eu/gammu/&quot;&gt;Gammu&lt;/a&gt; otomatis akan meng-INSERT-kan sms tersebut ke tabel inbox.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h3 id=&quot;struktur-tabel-gammu&quot;&gt;Struktur Tabel Gammu&lt;/h3&gt;

&lt;p&gt;Sebelum kita lanjut bagaimana membuat windows service untuk engine &lt;a href=&quot;https://wammu.eu/gammu/&quot;&gt;Gammu&lt;/a&gt; ada baiknya kita melihat dulu struktur tabel &lt;a href=&quot;https://wammu.eu/gammu/&quot;&gt;Gammu&lt;/a&gt; secara menyeluruh.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170822-01.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dari keenam tabel di atas, kita cukup fokus di 3 tabel utama yaitu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inbox&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;outbox&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;outbox_multipart&lt;/code&gt;. Tabel inbox otomatis terisi, jika ada sama masuk tentunya dengan syarat service Gammu Anda (GammuSMSD) sudah berjalan dengan baik. Di tabel inbox ini juga sudah ada field dengan nama Processed yang bisa kita gunakan sebagai flag/penanda sms yang sudah diproses.&lt;/p&gt;

&lt;p&gt;Nah jika ada sms yang mau dikirim, tinggal kita INSERT-kan datanya secara manual ke tabel outbox. Dan jika smsnya panjang (lebih dari 160 karakter), smsnya harus kita pecah menjadi 2, 3, dst sesuai dengan jumlah karakter yang mau dikirim. Setelah dipecah, sms pertama masuk ke tabel outbox, dan sisanya masuk ke tabel outbox_multipart.&lt;/p&gt;

&lt;p&gt;Untuk informasi lebih lanjut tentang struktur database &lt;a href=&quot;https://wammu.eu/gammu/&quot;&gt;Gammu&lt;/a&gt; bisa Anda cek di &lt;a href=&quot;https://wammu.eu/docs/manual/smsd/tables.html&quot;&gt;sini&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;konfigurasi-gammu&quot;&gt;Konfigurasi Gammu&lt;/h3&gt;

&lt;p&gt;Untuk konfigurasi gammu ada dua file yang harus kita edit nilainya yaitu file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;smsdrc&lt;/code&gt; dan &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gammurc&lt;/code&gt;. File ini biasanya ada di folder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Instalasi Gammu\share\doc\gammu\examples\config&lt;/code&gt; trus kita copykan ke folder ` Instalasi Gammu\bin`. Berikut adalah contoh konfigurasi gammu yang saya gunakan.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ini&quot; data-lang=&quot;ini&quot;&gt;&lt;span class=&quot;c&quot;&gt;# konfigurasi file gammurc
&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;[gammu]&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;com3:&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;at115200&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vb&quot; data-lang=&quot;vb&quot;&gt;&lt;span class=&quot;p&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;konfigurasi&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;file&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;smsdrc&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gammu&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;device&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;com3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;connection&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at115200&lt;/span&gt;

&lt;span class=&quot;err&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;smsd&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SMSD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;to&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FILES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MYSQL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PGSQL&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DBI&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;service&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SQL&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;File&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;syslog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;eventlog&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logged&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;logfile&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gammu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gammu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Amount&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;of&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;information&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;being&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;logged&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;each&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mean&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;one&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;level&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;debuglevel&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;How&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;many&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;should&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SMSD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;after&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;there&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;no&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;outbox&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;before&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;scanning&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;it&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;again&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Default&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;30.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;commtimeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Shows&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;how&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;many&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seconds&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SMSD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;should&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;wait&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;network&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;answer&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;during&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sending&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sms&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;If&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nothing&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;happen&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;during&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;this&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sms&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;will&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;be&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;resent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Default&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;mf&quot;&gt;30.&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sendtimeout&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Phone&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;communication&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;checksecurity&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CheckBattery&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Database&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;backends&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;congfiguration&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;user&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;root&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rahasia&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;host&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;gammuodbc&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pc&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;can&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;also&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;contain&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;port&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;after&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;colon&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;localhost&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;socket&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;database&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;db_gammu&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DBI&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;configuration&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;odbc&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Possible&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pgsql&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sqlite&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mssql&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Microsoft&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SQL&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;access&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Microsoft&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Access&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;oracle&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;wammu&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;docs&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;manual&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;smsd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;html&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;gammu&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;smsdrc&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sql&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mysql&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Coba perhatikan konfigurasi pada file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;smsdrc&lt;/code&gt; di atas terutama di bagian &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;host&lt;/code&gt;, nilainya kita isikan dengan nama ODBC yang terhubung ke database gammu, dan untuk membuat ODBCnya kita gunakan fasilitas ODBC Data Source.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170822-02.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Untuk menambahkan ODBC di atas, sebelumnya kita harus menginstall terlebih dulu MySQL Connector/ODBC.&lt;/p&gt;

&lt;h3 id=&quot;environment-testing-dan-development-tool-yang-digunakan&quot;&gt;Environment Testing dan Development Tool yang Digunakan&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Windows 7 Pro 64 bit&lt;/li&gt;
  &lt;li&gt;Visual Studio Community 2013 – untuk bahasa yang digunakan C#&lt;/li&gt;
  &lt;li&gt;Tipe aplikasi – Windows Service&lt;/li&gt;
  &lt;li&gt;Micro ORM &lt;a href=&quot;http://coding4ever.net/categories/dapper-net/&quot;&gt;Dapper.NET&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Gammu-1.38.4-Windows-64bit&lt;/li&gt;
  &lt;li&gt;Database SQLite – untuk menyimpan data siswa, mata pelajaran dan nilai&lt;/li&gt;
  &lt;li&gt;Database MySQL v5.5.45 – untuk menyimpan data gammu&lt;/li&gt;
  &lt;li&gt;MySQL Connector/ODBC v5.3.9&lt;/li&gt;
  &lt;li&gt;Modem Wavecom M1306B&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kok menggunakan Connector/ODBC ? Iya karena Gammu v1.38.4 sudah mendukung koneksi menggunakan ODBC. Jadi selain MySQL, dengan menggunakan ODBC dukungan databasenya jadi lebih banyak seperti PostgreSQL, SQLite, Oracle, MS SQL Server dan MS Access.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170822-03.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;contoh-kasus&quot;&gt;Contoh Kasus&lt;/h3&gt;

&lt;p&gt;Untuk contoh kasusnya kita akan membuat service sms gateway untuk request data yang berhubungan dengan siswa seperti data pribadi, mata pelajaran dan nilai. Service sms gateway ini akan terhubung ke dua database yaitu database gammu yang tersimpan di MySQL dan database nilai yang tersimpan di SQLite. Sms gateway ini mempunyai beberapa format request data yaitu:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;CEKMP		          &lt;span class=&quot;c&quot;&gt;# request data mata pelajaran&lt;/span&gt;
CEKSISWA#NIS           &lt;span class=&quot;c&quot;&gt;# request data siswa&lt;/span&gt;
CEKNILAI#NIS#&amp;lt;KODE MP&amp;gt; &lt;span class=&quot;c&quot;&gt;# request data nilai, kode mp optional&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Untuk data siswa, mata pelajaran dan nilainya disimpan menggunakan database SQLite.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170822-04.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;project-sms-gateway&quot;&gt;Project SMS Gateway&lt;/h3&gt;

&lt;p&gt;Project SMS Gateway ini dibangun dengan menggunakan &lt;a href=&quot;https://en.wikipedia.org/wiki/Separation_of_concerns&quot;&gt;konsep separation  of  concern&lt;/a&gt; atau pemisahan kode program berdasarkan fungsinya. Semua kode untuk akses database harus dipisahkan dengan kode untuk pengaturan user inteface. Hal ini memungkinkan kode akses database yang dibuat untuk aplikasi desktop, dengan mudah digunakan untuk aplikasi lainnya seperti web, console atau windows service. Selain itu penerapan konsep &lt;a href=&quot;https://en.wikipedia.org/wiki/Separation_of_concerns&quot;&gt;separation  of  concern&lt;/a&gt; secara disiplin, dapat menghasilkan kode program yang dapat dites secara otomatis menggunakan tool &lt;a href=&quot;http://coding4ever.net/blog/2016/07/20/unit-testing-menggunakan-nunit/&quot;&gt;Unit Testing&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Untuk urusan kode akses database, project ini menggunakan pattern/pola &lt;a href=&quot;http://coding4ever.net/blog/2016/02/22/repository-pattern/&quot;&gt;Repository Pattern&lt;/a&gt; yang berisi semua kode untuk mengakses database. Semua kode yang sepesifik terhadap implementasi akses database berhenti di sini, lapisan lebih atas tidak boleh tahu bagaimana akses database diterapkan, apakah menggunakan ADO.NET murni (raw ADO.NET) atau menggunakan tool ORM/Micro ORM seperti &lt;a href=&quot;http://coding4ever.net/categories/dapper-net/&quot;&gt;Dapper.NET&lt;/a&gt;, &lt;a href=&quot;http://coding4ever.net/categories/entity-framework/&quot;&gt;Entity Framework&lt;/a&gt; atau NHibernate. Lapisan lainya hanya perlu tahu fungsionalitas dari suatu method di dalam class Repository, tidak perlu tahu bagimana method tersebut diimplementasikan.&lt;/p&gt;

&lt;p&gt;Idealnya secara logic, arsitektur aplikasi yang kita gunakan seperti berikut:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170822-05.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tetapi untuk menyederhanakan pembahasan business logic layer bisa kita gabung ke presentation layer, sehingga arsitekturnya menjadi seperti berikut:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170822-06.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nah untuk contoh project SMS Gateway ini menggunakan arsitektur yang kedua.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170822-07.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Yang pertama adalah project &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WindowsServiceGammu.Model&lt;/code&gt;. Project ini bertipe &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Class Library&lt;/code&gt; yang berisi class model/entity yang merupakan representasi dari sebuah table. Jadi kalo kita ingin menerapkan konsep OOP dalam pemrograman database maka class-class model/entity ini wajib kita gunakan.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170822-08.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Berikutnya adalah project &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WindowsServiceGammu.Repository&lt;/code&gt;. Project ini bertipe &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Class Library&lt;/code&gt; yang berisi class-class repository yang bertugas untuk menangani operasi CRUD. Biasanya untuk masing-masing class model/entity kita buatkan class repositorynya.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170822-09.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pada gambar di atas saya menggunakan dua class context yaitu &lt;a href=&quot;https://github.com/k4m4r82/gammu-sms-gateway/blob/master/src/WindowsServiceGammu.Repository/Context/MySqlContext.cs&quot;&gt;MySqlContext&lt;/a&gt; dan &lt;a href=&quot;https://github.com/k4m4r82/gammu-sms-gateway/blob/master/src/WindowsServiceGammu.Repository/Context/SQLiteContext.cs&quot;&gt;SQLiteContext&lt;/a&gt;. Class context adalah class yang bertanggung jawab untuk berinteraksi secara langsung dengan database. Jadi class contextlah yang bertugas untuk membuat koneksi, menjalankan perintah sql seperti insert, update, delete dan select atau objek database seperti store procedure dan function. Selain class context juga ada class-class repository yang bertugas untuk menangani operasi CRUD. Berikut adalah contoh class repository untuk class &lt;a href=&quot;https://github.com/k4m4r82/gammu-sms-gateway/blob/master/src/WindowsServiceGammu.Repository/SiswaRepository.cs&quot;&gt;SiswaRepository&lt;/a&gt; dan &lt;a href=&quot;https://github.com/k4m4r82/gammu-sms-gateway/blob/master/src/WindowsServiceGammu.Repository/GammuRepository.cs&quot;&gt;GammuRepository&lt;/a&gt;.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/6398e259ef86dcf1a3386a2e3cd55215.js&quot;&gt; &lt;/script&gt;

&lt;script src=&quot;https://gist.github.com/e7f4273deeec9753254b46b8a830fa5d.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Untuk class repository lainnya bisa Anda cek di &lt;a href=&quot;https://github.com/k4m4r82/gammu-sms-gateway/tree/master/src/WindowsServiceGammu.Repository&quot;&gt;sini&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dan yang terakhir adalah project &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WindowsServiceGammu.Service&lt;/code&gt; yang bertipe &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows Service&lt;/code&gt;. Project ini tidak bisa dijalankan secara langsung seperti halnya project dengan tipe Console atau Windows Form, tapi harus didaftarkan terlebih dahulu ke Windows Service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170822-10.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Project ini hanya memanggil class-class model atau repository yang sudah ada.&lt;/p&gt;

&lt;p&gt;Ada dua class utama yang digunakan oleh project ini yang pertama yaitu class &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MainService&lt;/code&gt; yang merupakan turunan dari class ServiceBase. Class ServiceBase adalah class bawaan .NET Framework yang merupakan class dasar agar sebuah aplikasi bisa di register/menjadi bagian dari aplikasi service (Windows Service).&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/1713b5f3b53013a0cf2e0e5c199875cf.js&quot;&gt; &lt;/script&gt;

&lt;p&gt;Berikutnya adalah class &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMSGatewayTask&lt;/code&gt; yang bertugas untuk membaca tabel inbox-nya gammu, memvalidasi perintah yang ada dan mengenerate pesan balasan dan kemudian menyimpannya ke tabel outbox. Semua aktivitas membaca dan menyimpan kembali ke database ini dibantu oleh class-class repository.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/5d25b7f4ab056635fc915bb1404cf909.js&quot;&gt; &lt;/script&gt;

&lt;h3 id=&quot;instalasi-windows-service&quot;&gt;Instalasi Windows Service&lt;/h3&gt;

&lt;p&gt;Seperti yang sudah saya jelaskan di atas, project dengan tipe Windows Service tidak bisa dijalankan secara langsung seperti halnya project dengan tipe Console atau Windows Form, tapi harus didaftarkan terlebih dahulu ke Windows Service. Untuk mendaftarkannya kita gunakan tool bawaan .NET Framework yaitu InstallUtil.exe.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;c&quot;&gt;# install service&lt;/span&gt;
%WINDIR%&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;icrosoft.NET&lt;span class=&quot;se&quot;&gt;\F&lt;/span&gt;ramework&lt;span class=&quot;se&quot;&gt;\v&lt;/span&gt;4.0.30319&lt;span class=&quot;se&quot;&gt;\I&lt;/span&gt;nstallUtil.exe WindowsServiceGammu.Service.exe

&lt;span class=&quot;c&quot;&gt;# uninstall service&lt;/span&gt;
%WINDIR%&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;icrosoft.NET&lt;span class=&quot;se&quot;&gt;\F&lt;/span&gt;ramework&lt;span class=&quot;se&quot;&gt;\v&lt;/span&gt;4.0.30319&lt;span class=&quot;se&quot;&gt;\I&lt;/span&gt;nstallUtil.exe WindowsServiceGammu.Service.exe /u&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Jika berhasil seharusnya service sms gateway yang sudah kita buat akan terdaftar di Windows Service.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://coding4ever.files.wordpress.com/2017/08/20170822-11.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Selamat &lt;a href=&quot;https://github.com/k4m4r82/gammu-sms-gateway&quot;&gt;MENCOBA&lt;/a&gt; :blush:&lt;/p&gt;</content><author><name>Kamarudin</name></author><category term="sms gateway" /><category term="windows service" /><category term="gammu" /><category term="repository" /><category term="dapper" /><summary type="html">Pasti udah pada tau kan apa itu Gammu ? Klo enggak ya keterlaluan he he. Itu loh engine yang biasa digunakan untuk mengirim dan menerima sms dan biasanya sering digunakan untuk membuat sms gateway.</summary></entry><entry><title type="html">OpenRetail - Open Source Project for Retail Business</title><link href="http://coding4ever.net/blog/2017/04/13/openretail-open-source-software-for-retail-business/" rel="alternate" type="text/html" title="OpenRetail - Open Source Project for Retail Business" /><published>2017-04-13T22:18:44+07:00</published><updated>2017-04-13T22:18:44+07:00</updated><id>http://coding4ever.net/blog/2017/04/13/openretail-open-source-software-for-retail-business</id><content type="html" xml:base="http://coding4ever.net/blog/2017/04/13/openretail-open-source-software-for-retail-business/">&lt;h3 id=&quot;apa-itu-openretail&quot;&gt;Apa itu OpenRetail?&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;http://coding4ever.net/assets/images/logo/openretail-logo.png&quot; alt=&quot;&quot; class=&quot;align-left&quot; /&gt;&lt;a href=&quot;http://openretailblog.wordpress.com/&quot;&gt;OpenRetail&lt;/a&gt; adalah software open source khusus untuk bidang usaha ritel, grosir, mini market, toko bangunan, toko komputer, toko buku dan bidang usaha lainnya yang sejenis.&lt;/p&gt;

&lt;p&gt;Saat ini pilihan software untuk usaha retil memang banyak ditambah lagi harga yang bervariasi mulai dari ratusan hingga jutaan rupiah. Tapi untuk software yang gratis, open source dan berkualitas mungkin OpenRetail adalah solusinya :blush:.&lt;/p&gt;

&lt;!-- more --&gt;

&lt;h3 id=&quot;apakah-aplikasi-ini-benar-benar-gratis&quot;&gt;Apakah aplikasi ini benar-benar gratis?&lt;/h3&gt;

&lt;p&gt;Yuph, benar-benar gratis, bahkan lebih dari itu &lt;a href=&quot;http://openretailblog.wordpress.com/&quot;&gt;OpenRetail&lt;/a&gt; adalah software open source sehingga Anda bisa mendownload kode sumbernya, mempelajarinya dan mengembangkan sendiri sesuai kebutuhan, tapi dengan syarat tidak boleh menghapus informasi asli tentang pembuat aplikasi ini.&lt;/p&gt;

&lt;p&gt;Sebagai penutup, jika Anda merasakan manfaat menggunakan OpenRetail, jangan lupa untuk ikut &lt;a href=&quot;https://openretailblog.wordpress.com/kontribusi/&quot;&gt;berkontribusi&lt;/a&gt; dalam pengembangan &lt;a href=&quot;http://openretailblog.wordpress.com/&quot;&gt;OpenRetail&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Download: &lt;a href=&quot;https://github.com/rudi-krsoftware/open-retail/releases&quot;&gt;OpenRetail&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://openretailblog.files.wordpress.com/2017/04/08042017-1.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://openretailblog.files.wordpress.com/2017/04/08042017-2.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://openretailblog.files.wordpress.com/2017/04/08042017-3.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://openretailblog.files.wordpress.com/2017/04/08042017-4.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://openretailblog.files.wordpress.com/2017/04/08042017-5.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://openretailblog.files.wordpress.com/2017/01/07.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://openretailblog.files.wordpress.com/2017/04/08042017-6.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://openretailblog.files.wordpress.com/2017/04/08042017-7.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://openretailblog.files.wordpress.com/2017/04/08042017-8.png&quot; alt=&quot;&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Selamat mencoba :blush:&lt;/p&gt;</content><author><name>Kamarudin</name></author><category term="OpenRetail" /><category term="Open Retail" /><category term="Software" /><category term="Project" /><category term="Mini Market" /><category term="Toko Bangunan" /><category term="Open Source" /><summary type="html">Apa itu OpenRetail?</summary></entry></feed>